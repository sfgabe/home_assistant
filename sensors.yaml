# Weather prediction
- platform: darksky
  api_key: !secret darksky_api_key
  latitude: 40.716579
  longitude: -73.986748
  forecast:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
  hourly_forecast:
    - 0
    - 1
  scan_interval:
    # At least one of these must be specified:
    days: 0
    hours: 0
    minutes: 5
    seconds: 0
    milliseconds: 0
  monitored_conditions:
    - summary
    - icon
    - nearest_storm_distance
    - precip_type
    - precip_intensity
    - precip_probability
    - precip_accumulation
    - temperature
    - apparent_temperature
    - dew_point
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone
    - moon_phase
    - minutely_summary
    - hourly_summary
    - daily_summary
    - precip_intensity_max
    - uv_index
    - alerts

- platform: season

- platform: template
  sensors:
    moonphases:
      entity_id: sensor.dark_sky_moon_icon
      friendly_name: 'Moon Phase NYC'
      entity_picture_template: >
        {% set mphase = states.sensor.dark_sky_moon_phase_1d.state | int %}
        {% if mphase == 0.0 -%}
           /local/images/moonphases/NNewMoon.jpg
        {% elif mphase > 0.0 -%}
           /local/images/moonphases/NWaxingCrescent.jpg
        {% elif mphase == 0.25 -%}
           /local/images/moonphases/NFirstQuarter.jpg
        {% elif mphase > 0.25 -%}
           /local/images/moonphases/NWaxingGibbous.jpg
        {% elif mphase == 0.5 -%}
           /local/images/moonphases/NFullMoon.jpg
        {% elif mphase > 0.5 -%}
           /local/images/moonphases/NWaningGibbous.jpg
        {% elif mphase == 0.75 -%}
           /local/images/moonphases/NLastQuarter.jpg
        {% elif mphase > 0.75 -%}
           /local/images/moonphases/NWaningCrescent.jpg
        {% else %}
           /local/images/moonphases/NNewMoon.jpg
        {% endif %}
      value_template: >
        {% set mphase = states.sensor.dark_sky_moon_phase.state | int %}
        {% if mphase == 0.0 -%} "New Moon"
        {% elif mphase > 0.0 -%} "Waxing Crescent"
        {% elif mphase == 0.25 -%} "First Quarter"
        {% elif mphase > 0.25 -%} "Waxing Gibbous"
        {% elif mphase == 0.5 -%} "Full Moon"
        {% elif mphase > 0.5 -%} "Waning Gibbous"
        {% elif mphase == 0.75 -%} "Last Quarter"
        {% elif mphase > 0.75 -%} "Waning Crescent"
        {% else %} "Error"
        {% endif %}

- platform: template
  sensors:
    weekday:
      friendly_name: 'Weekday'
      value_template: '{{ now().strftime("%A") }}'
    forecast_today:
      friendly_name: "Today's Forecast"
      value_template: >
        {{states.sensor.dark_sky_daily_high_temperature.state|round(0)}}°/{{states.sensor.dark_sky_daily_low_temperature.state|round(0)}}°/{{states.sensor.dark_sky_precip_probability.state|round(0)}}%
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon", "cloudy") %}
          mdi:weather-cloudy
          {% elif is_state("sensor.dark_sky_icon", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon", "partly-cloudy-day") %}
          mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon", "partly-cloudy-night") %}
          mdi:weather-partlycloudy
        {% else %}
          error
        {% endif %}
    forecast_1:
      friendly_name_template: >
        {%- set date = as_timestamp(now()) + (1 * 86400 ) -%}
        {{ date | timestamp_custom("%A (%-m/%-d)") }}
      value_template: >
        {{states.sensor.dark_sky_daily_high_temperature_1.state|round(0)}}°/{{states.sensor.dark_sky_daily_low_temperature_1.state|round(0)}}°/{{states.sensor.dark_sky_precip_probability_1.state|round(0)}}%
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon_1", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon_1", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon_1", "cloudy") %}
          mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon_1", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon_1", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon_1", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon_1", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon_1", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon_1", "partly-cloudy-day") %}
          mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon_1", "partly-cloudy-night") %}
          mdi:weather-partlycloudy
        {% else %}
          error
        {% endif %}

    forecast_2:
      friendly_name_template: >
        {%- set date = as_timestamp(now()) + (2 * 86400 ) -%}
        {{ date | timestamp_custom("%A (%-m/%-d)") }}
      value_template: >
        {{states.sensor.dark_sky_daily_high_temperature_2.state|round(0)}}°/{{states.sensor.dark_sky_daily_low_temperature_2.state|round(0)}}°/{{states.sensor.dark_sky_precip_probability_2.state|round(0)}}%
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon_2", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon_2", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon_2", "cloudy") %}
          mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon_2", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon_2", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon_2", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon_2", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon_2", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon_2", "partly-cloudy-day") %}
          mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon_2", "partly-cloudy-night") %}
          mdi:weather-partlycloudy
        {% else %}
          error
        {% endif %}

    forecast_3:
      friendly_name_template: >
        {%- set date = as_timestamp(now()) + (3 * 86400 ) -%}
        {{ date | timestamp_custom("%A (%-m/%-d)") }}
      value_template: >
        {{states.sensor.dark_sky_daily_high_temperature_3.state|round(0)}}°/{{states.sensor.dark_sky_daily_low_temperature_3.state|round(0)}}°/{{states.sensor.dark_sky_precip_probability_3.state|round(0)}}%
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon_3", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon_3", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon_3", "cloudy") %}
          mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon_3", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon_3", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon_3", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon_3", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon_3", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon_3", "partly-cloudy-day") %}
          mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon_3", "partly-cloudy-night") %}
          mdi:weather-partlycloudy
        {% else %}
          error
        {% endif %}

    forecast_4:
      friendly_name_template: >
        {%- set date = as_timestamp(now()) + (4 * 86400 ) -%}
        {{ date | timestamp_custom("%A (%-m/%-d)") }}
      value_template: >
        {{states.sensor.dark_sky_daily_high_temperature_4.state|round(0)}}°/{{states.sensor.dark_sky_daily_low_temperature_4.state|round(0)}}°/{{states.sensor.dark_sky_precip_probability_4.state|round(0)}}%
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon_4", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon_4", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon_4", "cloudy") %}
          mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon_4", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon_4", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon_4", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon_4", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon_4", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon_4", "partly-cloudy-day") %}
          mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon_4", "partly-cloudy-night") %}
          mdi:weather-partlycloudy
        {% else %}
          error
        {% endif %}
    forecast_5:
      friendly_name_template: >
        {%- set date = as_timestamp(now()) + (5 * 86400 ) -%}
        {{ date | timestamp_custom("%A (%-m/%-d)") }}
      value_template: >
        {{states.sensor.dark_sky_daily_high_temperature_5.state|round(0)}}°/{{states.sensor.dark_sky_daily_low_temperature_5.state|round(0)}}°/{{states.sensor.dark_sky_precip_probability_5.state|round(0)}}%
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon_5", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon_5", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon_5", "cloudy") %}
          mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon_5", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon_5", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon_5", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon_5", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon_5", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon_5", "partly-cloudy-day") %}
          mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon_5", "partly-cloudy-night") %}
          mdi:weather-partlycloudy
        {% else %}
          error
        {% endif %}

    forecast_6:
      friendly_name_template: >
        {%- set date = as_timestamp(now()) + (6 * 86400 ) -%}
        {{ date | timestamp_custom("%A (%-m/%-d)") }}
      value_template: >
          {{states.sensor.dark_sky_daily_high_temperature_6.state|round(0)}}°/{{states.sensor.dark_sky_daily_low_temperature_6.state|round(0)}}°/{{states.sensor.dark_sky_precip_probability_6.state|round(0)}}%
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon_6", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon_6", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon_6", "cloudy") %}
          mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon_6", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon_6", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon_6", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon_6", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon_6", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon_6", "partly-cloudy-day") %}
          mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon_6", "partly-cloudy-night") %}
          mdi:weather-partlycloudy
        {% else %}
          error
        {% endif %}
    forecast_7:
      friendly_name_template: >
        {%- set date = as_timestamp(now()) + (7 * 86400 ) -%}
        {{ date | timestamp_custom("%A (%-m/%-d)") }}
      value_template: >
          {{states.sensor.dark_sky_daily_high_temperature_7.state|round(0)}}°/{{states.sensor.dark_sky_daily_low_temperature_7.state|round(0)}}°/{{states.sensor.dark_sky_precip_probability_7.state|round(0)}}%
      icon_template: >-
        {% if is_state("sensor.dark_sky_icon_7", "clear-day") %}
          mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon_7", "clear-night") %}
          mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon_7", "cloudy") %}
          mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon_7", "rain") %}
          mdi:weather-pouring
        {% elif is_state("sensor.dark_sky_icon_7", "sleet") %}
          mdi:weather-snowy-rain
        {% elif is_state("sensor.dark_sky_icon_7", "snow") %}
          mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon_7", "wind") %}
          mdi:weather-windy
        {% elif is_state("sensor.dark_sky_icon_7", "fog") %}
          mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon_7", "partly-cloudy-day") %}
          mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon_7", "partly-cloudy-night") %}
          mdi:weather-partlycloudy
        {% else %}
          error
        {% endif %}

- platform: darksky
  api_key: !secret darksky_api_key
  name: Reef Weather
  latitude: -8.499113
  longitude: 115.696371
  forecast:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
  monitored_conditions:
    - icon
    - summary
    - nearest_storm_distance
    - nearest_storm_bearing
    - humidity
    - temperature
    - temperature_high
    - temperature_low
    - apparent_temperature
    - apparent_temperature_high
    - apparent_temperature_low
    - wind_speed
    - wind_bearing
    - precip_type
    - precip_probability
    - precip_accumulation
    - precip_intensity
    - precip_intensity_max
    - uv_index
    - daily_summary
    - pressure
    - visibility
    - moon_phase
  scan_interval:
    hours: 2

- platform: darksky
  api_key: !secret darksky_api_key
  name: Amazon Weather
  latitude: -12.653650
  longitude: -52.946115
  forecast:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
  monitored_conditions:
    - icon
    - summary
    - nearest_storm_distance
    - nearest_storm_bearing
    - humidity
    - temperature
    - temperature_high
    - temperature_low
    - apparent_temperature
    - apparent_temperature_high
    - apparent_temperature_low
    - wind_speed
    - wind_bearing
    - precip_type
    - precip_probability
    - precip_accumulation
    - precip_intensity
    - precip_intensity_max
    - uv_index
    - daily_summary
    - pressure
    - visibility
    - moon_phase
  scan_interval:
    hours: 2

- platform: template
  sensors:
    amazon_moonphases:
      entity_id: sensor.amazon_weather_moon_icon
      friendly_name: 'Amazon Moon'
      entity_picture_template: >
        {% set mphase = states.sensor.amazon_weather_moon_phase_1d.state | int %}
        {% if mphase == 0.0 -%}
           /local/images/moonphases/NNewMoon.jpg
        {% elif mphase > 0.0 -%}
           /local/images/moonphases/NWaxingCrescent.jpg
        {% elif mphase == 0.25 -%}
           /local/images/moonphases/NFirstQuarter.jpg
        {% elif mphase > 0.25 -%}
           /local/images/moonphases/NWaxingGibbous.jpg
        {% elif mphase == 0.5 -%}
           /local/images/moonphases/NFullMoon.jpg
        {% elif mphase > 0.5 -%}
           /local/images/moonphases/NWaningGibbous.jpg
        {% elif mphase == 0.75 -%}
           /local/images/moonphases/NLastQuarter.jpg
        {% elif mphase > 0.75 -%}
           /local/images/moonphases/NWaningCrescent.jpg
        {% else %}
           /local/images/moonphases/NNewMoon.jpg
        {% endif %}
      value_template: >
        {% set mphase = states.sensor.amazon_weather_moon_phase_1d.state | int %}
        {% if mphase == 0.0 -%} "New Moon"
        {% elif mphase > 0.0 -%} "Waxing Crescent"
        {% elif mphase == 0.25 -%} "First Quarter"
        {% elif mphase > 0.25 -%} "Waxing Gibbous"
        {% elif mphase == 0.5 -%} "Full Moon"
        {% elif mphase > 0.5 -%} "Waning Gibbous"
        {% elif mphase == 0.75 -%} "Last Quarter"
        {% elif mphase > 0.75 -%} "Waning Crescent"
        {% else %} "Error"
        {% endif %}

# Time Date
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'time_date'
    - 'time_utc'
    - 'beat'

#World Tides use for fishtanks
- platform: worldtidesinfo
  api_key: 07cd8bd9-5e2a-446d-a29a-dbdcd3fdcc84
  name: Bali Reef Tides
  latitude: -7.250445
  longitude: 112.768845
  scan_interval: 43200

- platform: mqtt
  state_topic: 'ifttt/reef_data'
  name: Latest Reef Tests MQTT
  value_template: "{{ value }}"

- platform: template
  sensors:
    ifttt_reef_tests_latest:
      entity_id: sensor.ifttt_reef_tests_latest
      friendly_name: "Latest Reef Tests"
      value_template: '{{ value }}'

- platform: command_line
  name: Server Temperature
  command: "cat /sys/class/thermal/thermal_zone1/temp"
  unit_of_measurement: '°C'
  value_template: '{{ value | multiply(-0.0001) | int | round(1) }}'

- platform: mqtt
  name: "HomeCam Motion Raw JSON"
  state_topic: "homecam/motion/reading"
  value_template: '{{ value_json.payload }}'

#- platform: rest
#  name: HomeCam Direct API
#  username: !secret homecam_username
#  password: !secret homecam_password
#  authentication: basic
#  json_attributes:
#    - width
#    - height
#    - framerate
#    - text_left
#    - text_right
#    - pixels
#  resource: http://homecam.RollinsNest:7999/1/config/list
#  headers:
#      Connection: keep-alive
#      content-type: application/json

- platform: mqtt
  state_topic: 'temp-home/reading'
  name: HomeCam Info Raw
  value_template: "{{ value }}"

- platform: template
  sensors:
    mqtt_topic_home_sysinfo_template:
      friendly_name: "HomeCam Temperature"
      value_template: '{{ states.sensor.homecam_info_raw.state | float | round(1) }}'
      unit_of_measurement: '°C'
    mqtt_topic_home_sysinfo_template_serverload:
      friendly_name: "HomeCam Server Load"
      value_template: '{{ states.sensor.homecam_info_raw.state.split(",")[1] | int | round(3) }}'
    mqtt_topic_home_sysinfo_template_serverspeed:
      friendly_name: "HomeCam Server Speed"
      value_template: '{{ states.sensor.homecam_info_raw.state.split(",")[2].split("k")[0] | int | round(1) }}'
      unit_of_measurement: 'kB/s'
    mqtt_topic_home_sysinfo_template_ambient_temperature:
      friendly_name: "HomeCam Ambient Temperature"
      value_template: '{{ states.sensor.homecam_info_raw.state.split(",")[3] | multiply(0.001) | round(1) }}'
      unit_of_measurement: '°C'
    last_homecam_motion:
      friendly_name: "Last Homecam Motion"
      value_template:   >-
        {% set today = now().day | int %}
        {% set motion_date = ((as_timestamp(states.binary_sensor.homecam_motion.last_changed) | timestamp_custom("%d")) | int) %}
        {% if today == motion_date %}
          {% set day = "Today" %}
        {% elif (today - 1) == motion_date %}
          {% set day = "Yesterday" %}
        {% elif today == 1 and motion_date > 27 %}
          {% set day = "Yesterday" %}
        {% else %}
          {% set day = as_timestamp(states.binary_sensor.homecam_motion.last_changed) | timestamp_custom("%A")%}
        {% endif %}
        {% set time = as_timestamp(states.binary_sensor.homecam_motion.last_changed) | timestamp_custom("%l:%M %p")%}
        {{[day,time]|join(" at ")}}

- platform: template
  scan_interval: 120
  sensors:
    garden_light_manual_state_time:
      friendly_name: "Garden Light Last Update"
      value_template: '{{ relative_time (states.switch.garden_light_manual.last_updated) + " ago"}}'
    mqtt_topic_garden_water_state_template:
      friendly_name: "Garden Water State"
      value_template: '{{ states.sensor.garden_waterbot_raw.state.split("at ")[0] }}'
    mqtt_topic_garden_water_state_time:
      friendly_name: "Garden Water State Time"
      value_template: >
        {%- set my_lastwater = states.sensor.gardenwaterinfo.attributes.current | last -%}
        {%- set my_lastwatertime =  my_lastwater.time -%}
        {{ my_lastwatertime }}

#Garden monitor channels
- platform: mqtt
  state_topic: 'groot-soil-temp/reading'
  name: Garden Monitor Soil Temp
  unit_of_measurement: '°C'
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: 'groot-water-level/reading'
  name: Garden Monitor Water Level
  unit_of_measurement: '%'
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: 'groot-soil-moisture/reading'
  name: Garden Monitor Soil Moisture
  unit_of_measurement: '%'
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: 'groot-light-level/reading'
  name: Garden Monitor Light Level
  unit_of_measurement: '%'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Garden Monitor Temp F'
  state_topic: 'groot-temp-f/reading'
  unit_of_measurement: '°F'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Garden Monitor Temp C'
  state_topic: 'groot-temp-c/reading'
  unit_of_measurement: '°C'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Garden Monitor Temp H'
  state_topic: 'groot-temp-h/reading'
  unit_of_measurement: '%'
  value_template: "{{ value |round(0)}}"

- platform: mqtt
  name: 'Garden Monitor HIF'
  state_topic: 'groot-temp-hif/reading'
  unit_of_measurement: '°F'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Garden Monitor HIC'
  state_topic: 'groot-temp-hic/reading'
  unit_of_measurement: '°C'
  value_template: "{{ value }}"

#- platform: filter
#  name: "Filtered Garden Humidity"
#  entity_id: sensor.mqtt_topic_garden_humidity_template
#  filters:
#    - filter: outlier
#      window_size: 5
#      radius: 5.0
#    - filter: lowpass
#      time_constant: 10
#      precision: 2
#- platform: filter
#  name: "Filtered Garden Temperature"
#  entity_id: sensor.mqtt_topic_garden_temperature_template
#  filters:
#    - filter: outlier
#      window_size: 5
#      radius: 5.0
#    - filter: lowpass
#      time_constant: 10
#    - filter: time_simple_moving_average
#      window_size: 00:05
#      precision: 2

#Plant monitor channels
- platform: mqtt
  state_topic: 'groot2-soil-temp/reading'
  name: Plant Monitor Soil Temp
  unit_of_measurement: '°C'
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: 'groot2-soil-moisture/reading'
  name: Plant Monitor Soil Moisture
  unit_of_measurement: '%'
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: 'groot2-light-level/reading'
  name: Plant Monitor Light Level
  unit_of_measurement: '%'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Plant Monitor Temp F'
  state_topic: 'groot2-temp-f/reading'
  unit_of_measurement: '°F'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Plant Monitor Temp C'
  state_topic: 'groot2-temp-c/reading'
  unit_of_measurement: '°C'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Plant Monitor Temp H'
  state_topic: 'groot2-temp-h/reading'
  unit_of_measurement: '%'
  value_template: "{{ value |round(0)}}"

- platform: mqtt
  name: 'Plant Monitor HIF'
  state_topic: 'groot2-temp-hif/reading'
  unit_of_measurement: '°F'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Plant Monitor HIC'
  state_topic: 'groot2-temp-hic/reading'
  unit_of_measurement: '°C'
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: 'octoprint-dht11/reading'
  name: OctoPrint Humidity Raw
  value_template: "{{ value }}"

- platform: template
  scan_interval: 120
  sensors:
    mqtt_topic_octoprint_humidity_template:
      friendly_name: "OctoPrint Humidity"
      value_template: '{{ states.sensor.octoprint_humidity_raw.state.split("Humidity=")[1].split("%")[0] }}'
      unit_of_measurement: '%'
    mqtt_topic_octoprint_temperature_template:
      friendly_name: "OctoPrint Temperature"
      value_template: '{{ states.sensor.octoprint_humidity_raw.state.split("Temp=")[1].split("*")[0] }}'
      unit_of_measurement: '°C'
    mqtt_topic_octoprint_humidity_template_time:
      friendly_name: "OctoPrint Humidity Time"
      value_template: >
        {%- set date = as_timestamp(states.sensor.octoprint_humidity_raw.state.split("at ")[1]) -%}
        {{ date | timestamp_custom("%A, %B %d, %Y at %k:%M %P") }}

#Amazon-pi Data
- platform: rest
  name: AmazonPiSysUptime
  username: !secret amazonpi_username
  password: !secret amazonpi_password
  authentication: basic
  json_attributes:
    - "name"
    - "ip"
    - "uptime"
    - "cpu_temperature"
    - "version"
  resource: http://192.168.50.251/api/info
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.251/
      Cookie: !secret amazonpi_cookie

- platform: rest
  name: AmazonCameraLatest
  username: !secret amazonpi_username
  password: !secret amazonpi_password
  authentication: basic
  json_attributes:
    - image
  resource: http://192.168.50.251/api/camera/latest
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.251/
      Cookie: !secret amazonpi_cookie

- platform: template
  sensors:
    octocam_pic_url:
      value_template: >
        {% set url = states.sensor.amazoncameralatest.attributes.image %}
        {% set prefix = "http://192.168.50.251/images/" %}
        {{ [prefix, url] | join("") }}

- platform: template
  sensors:
    amazonsysinfo_template_name:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.name }}'
      friendly_name: Amazon Server Name
      entity_id: sensor.reefsysinfo_template_name
    amazonsysinfo_template_version:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.version }}'
      friendly_name: Amazon Server Version
      entity_id: sensor.rreefsysinfo_template_version
    amazonsysinfo_template_uptime:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.uptime }}'
      friendly_name: Amazon Server Uptime
      entity_id: sensor.reefsysinfo_template_uptime
    amazonsysinfo_template_ip:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.ip }}'
      friendly_name: Amazon Server IP
      entity_id: sensor.reefsysinfo_template_ip
    amazonsysinfo_template_cpu_temperature:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.cpu_temperature }}'
      friendly_name: Amazon Server CPU Temp
      entity_id: sensor.amazonsysinfo_template_cpu_temperature

- platform: rest
  name: OnlyAmazonPiTemp
  username: !secret amazonpi_username
  password: !secret amazonpi_password
  authentication: basic
  resource: http://192.168.50.251/api/tcs/1/usage
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.251/
      Cookie: !secret amazonpi_cookie
  value_template: '{{ value_json.current[-1].value | round(2) }}'
  unit_of_measurement: '°F'

- platform: rest
  name: OnlyAmazonPiTempTime
  username: !secret amazonpi_username
  password: !secret amazonpi_password
  authentication: basic
  resource: http://192.168.50.251/api/tcs/1/usage
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.251/
      Cookie: !secret amazonpi_cookie
  value_template: '{{ value_json.current[-1].time }}'

- platform: rest
  name: AmazonPiFloat
  username: !secret amazonpi_username
  password: !secret amazonpi_password
  authentication: basic
  resource: http://192.168.50.251/api/equipment/1
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.251/
      Cookie: !secret amazonpi_cookie
  value_template: >-
    {% set float_status = value_json.on %}
    {% if float_status == false %}OK
    {% elif float_status == False %}OK
    {% elif float_status == true %}Low
    {% elif float_status == True %}Low
    {% else %}n/a
    {% endif %}

- platform: rest
  name: Amazon Camera Config
  username: !secret amazonpi_username
  password: !secret amazonpi_password
  authentication: basic
  resource: http://192.168.50.251/api/camera/config
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.251/
      Cookie: !secret amazonpi_cookie

- platform: rest
  name: AmazonPi Errors
  username: !secret amazonpi_username
  password: !secret amazonpi_password
  authentication: basic
  json_attributes:
    - message
    - time
    - count
    - id
  resource: http://192.168.50.251/api/errors
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.251/
      Cookie: !secret amazonpi_cookie

- platform: template
  sensors:
    mail_deliveries_message:
      friendly_name: "Deliveries Summary"
      value_template: >
        {# Deliveries Sentence #}
          {% macro deliveries_sentence() -%}
                {%- if states("sensor.mail_usps_mail")|int == 0 -%}
                  No
                {%- else -%}
                  {{states("sensor.mail_usps_mail")|int}}
                {%- endif -%}
              {{' '}}
                {%- if states("sensor.mail_usps_mail")|int == 1 -%}
                  piece of mail
                {%- else -%}
                  pieces of mail
                {%- endif -%}
              {{' '}}will be delivered.{{' '}}
                {%- if states("sensor.mail_usps_delivering")|int == 0 -%}
                  No
                {%- else -%}
                  {{states("sensor.mail_usps_delivering")|int}}
                {%- endif -%}
              {{' '}}
                {%- if states("sensor.mail_usps_delivering")|int == 1 -%}
                  USPS package is
                {%- else -%}
                  USPS packages are
                {%- endif -%}
              {{' '}}in transit.{{' '}}
              {%- if states("sensor.mail_amazon_packages")|int == 0 -%}
                  No
                {%- else -%}
                  {{states("sensor.mail_amazon_packages")|int}}
                {%- endif -%}
              {{' '}}
                {%- if states("sensor.mail_amazon_packages")|int == 1 -%}
                  Amazon package is
                {%- else -%}
                  Amazon packages are
                {%- endif -%}
              {{' '}}in transit.{{' '}}
          {%- endmacro %}
        {{deliveries_sentence()}}

- platform: mqtt
  name: 'Mailbox Temp F'
  state_topic: 'mailbox-temp-f/reading'
  unit_of_measurement: '°F'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Mailbox Temp C'
  state_topic: 'mailbox-temp-c/reading'
  unit_of_measurement: '°C'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Mailbox Temp H'
  state_topic: 'mailbox-temp-h/reading'
  unit_of_measurement: '%'
  value_template: "{{ value |round(2)}}"

- platform: mqtt
  name: 'Mailbox Temp HIF'
  state_topic: 'mailbox-temp-hif/reading'
  unit_of_measurement: '°F'
  value_template: "{{ value }}"

- platform: mqtt
  name: 'Mailbox Temp HIC'
  state_topic: 'mailbox-temp-hic/reading'
  unit_of_measurement: '°C'
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: 'mailbox/reading'
  name: 'Mailbox Firehose'
  value_template: "{{ value }}"

- platform: filter
  name: "Mailbox Filtered Humidity"
  entity_id: sensor.mailbox_temp_h
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 2
    - filter: range
      lower_bound: 1
      upper_bound: 100
- platform: filter
  name: "Mailbox Filtered Temperature"
  entity_id: sensor.mailbox_temp_f
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2
    - filter: range
      lower_bound: 35
      upper_bound: 120

- platform: template
  sensors:
    reef_time_low_tide:
      friendly_name: "Next Reef Time Low Tide"
      value_template: '{{ states.sensor.bali_reef_tides.attributes.low_tide_time_utc.split("T")[1].split("+")[0] }}'
      unit_of_measurement: 'time'
    reef_time_high_tide:
      friendly_name: "Next Reef Time High Tide"
      value_template: '{{ states.sensor.bali_reef_tides.attributes.high_tide_time_utc.split("T")[1].split("+")[0] }}'
      unit_of_measurement: 'time'

# Track the sun in the Amazon
#- platform: yweather
#  woeid: 455833
#  name: AmazonWeather
#  monitored_conditions:
#    - weather
#    - weather_current
#    - temp_min
#    - temp_max
#    - wind_speed
#    - pressure
#    - visibility
#    - humidity
#    - temperature

# Track the sun in Bali
#- platform: yweather
#  woeid: 2291072
#  name: ReefWeather
#  monitored_conditions:
#    - weather
#    - weather_current
#    - temp_min
#    - temp_max
#    - wind_speed
#    - pressure
#    - visibility
#    - humidity
#    - temperature

- platform: template
  sensors:
    local_time_ampm:
      entity_id: sensor.RollinsNest_time_ampm
      friendly_name: "Local Time AM/PM"
      value_template: '{{ now().time().strftime("%-I:%M %P") }}'

- platform: template
  sensors:
    local_time_24h:
      entity_id: sensor.RollinsNest_time_24h
      friendly_name: "Local Time 24h No Zero"
      value_template: '{{ now().time().strftime("%k:%M") }}'

- platform: template
  sensors:
    pretty_date_time:
      entity_id: sensor.pretty_date_time
      friendly_name: "Today"
      value_template: >
        {%- set date = as_timestamp(now()) -%}
        {{ date | timestamp_custom("%A, %B %d, %Y at %k:%M %P") }}

- platform: template
  sensors:
    pretty_date:
      entity_id: sensor.pretty_date
      friendly_name: "Today"
      value_template: >
        {%- set date = as_timestamp(now()) -%}
        {{ date | timestamp_custom("%B %d, %Y") }}

- platform: template
  sensors:
    pretty_month:
      friendly_name: "Month"
      entity_id: sensor.pretty_month
      value_template: >
        {%- set date = as_timestamp(now()) -%}
        {{ date | timestamp_custom("%B") }}

#Scrape for Amazon Tides
- platform: scrape
  resource: https://tides4fishing.com/br/amapa/rio-amazonas-ponta-do-ceu
  select: "div#grafico_estado_actual_texto_pleamar"
  name: AmazonNextHighTide
#  entity_id: sensor.amazonnexthightide
  scan_interval: 14400
  value_template: '{{ value.split("de ")[1].split(" h")[0] }}'

- platform: scrape
  resource: https://tides4fishing.com/br/amapa/rio-amazonas-ponta-do-ceu
  select: "div#grafico_estado_actual_texto_bajamar"
  name: AmazonNextLowTide
#  entity_id: sensor.amazonnextlowtide
  scan_interval: 14400
  value_template: '{{ value.split("de ")[1].split(" h")[0] }}'

# - platform: scrape
#   resource: https://www.gaisma.com/en/location/manaus.html
#   select: "td.sunshine:first"
#   name: AmazonSunriseTides
#   scan_interval: 7200
#  value_template: "{{ (value.split(' h')[0])|timestamp_custom('%k:%M', false) }}"
- platform: multiscrape
  name: AmazonSunriseTides
  resource: https://www.gaisma.com/en/location/manaus.html
  scan_interval: 7200
  selectors:
    amazonsunrisetides:
      name: AmazonSunriseTides
      select: 'td.sunshine:nth-of-type(2)'
      value_template: '{{ (value.split(",")[0]) }}'

- platform: multiscrape
  name: AmazonSunsetTides
  resource: https://www.gaisma.com/en/location/manaus.html
  scan_interval: 7200
  selectors:
    amazonsunsettides:
      name: AmazonSunsetTides
      select: 'td.sunshine:nth-of-type(3)'
      value_template: '{{ (value.split(",")[0]) }}'
# - platform: scrape
#   resource: https://www.gaisma.com/en/location/manaus.html
#   select: "td.sunshine:nth-of-type(3):first"
#   name: AmazonSunsetTides
#   scan_interval: 7200
#  value_template: '{{ (value.split("")[0]) }}'

- platform: command_line
  command: "cat /home/homeassistant/.homeassistant/scripts/BrancoRiver_CaracaraiWaterTemperature_ltv.txt"
  name: 'Monthly Amazon Temp MinMax Raw This Month'
  value_template: >
        {%- set date = as_timestamp(now()) -%}
        {%- set month = ( date | timestamp_custom("%B")) -%}
        {{ (value.split(month)[1].split("\n")[0] ) }}

- platform: template
  sensors:
    monthly_amazon_temp_max:
      friendly_name: "Monthly Amazon Temp Max"
      value_template: '{{ states.sensor.monthly_amazon_temp_minmax_raw_this_month.state.split(";")[1].split(";")[0] }}'
      unit_of_measurement: '°C'
    monthly_amazon_temp_highmed:
      friendly_name: "Monthly Amazon Temp HighMed"
      value_template: '{{ states.sensor.monthly_amazon_temp_minmax_raw_this_month.state.split(";")[2].split(";")[0] }}'
      unit_of_measurement: '°C'
    monthly_amazon_temp_med:
      friendly_name: "Monthly Amazon Temp Median"
      value_template: '{{ states.sensor.monthly_amazon_temp_minmax_raw_this_month.state.split(";")[3].split(";")[0] }}'
      unit_of_measurement: '°C'
    monthly_amazon_temp_lowmed:
      friendly_name: "Monthly Amazon Temp LowMed"
      value_template: '{{ states.sensor.monthly_amazon_temp_minmax_raw_this_month.state.split(";")[4].split(";")[0] }}'
      unit_of_measurement: '°C'
    monthly_amazon_temp_min:
      friendly_name: "Monthly Amazon Temp Min"
      value_template: '{{ states.sensor.monthly_amazon_temp_minmax_raw_this_month.state.split(";")[5] }}'
      unit_of_measurement: '°C'
#Reef time adjustment of 2 hours
    reeftime_sunrise_adjustment:
      friendly_name: "Reeftime Sunrise Adjustment"
      value_template: >
        {% set time_string = now().strftime("%Y-%m-%d ")+states('sensor.reefsunrisetides') %}
        {% set rise_time = strptime(time_string,"%Y-%m-%d %H:%M").timestamp() %}
        {% set adj_time = (120 * 60) %}
        {{ ( rise_time + adj_time ) | timestamp_custom("%H:%M") }}
    reeftime_sunset_adjustment:
      friendly_name: "Reeftime Sunset Adjustment"
      value_template: >
        {% set time_string = now().strftime("%Y-%m-%d ")+states('sensor.reefsunsettides') %}
        {% set rise_time = strptime(time_string,"%Y-%m-%d %H:%M").timestamp() %}
        {% set adj_time = (120 * 60) %}
        {{ ( rise_time + adj_time ) | timestamp_custom("%H:%M") }}


#    octocam_tweet_img:
#      friendly_name: "Latest OctoCam Tweet Image"
#      value_template: >
#        {% set octo_tweets = states.sensor.octocambot_feed.attributes | first %}
#        {% set img = octo_tweets.split("pic.twitter.com/")[1] %}
#        {% set prefix = "http://pic.twitter.com/" %}
#        {{ [prefix, img] | join("") }}
#    octocam_tweet_text:
#      friendly_name: "Latest OctoCam Tweet Text"
#      value_template: >
#        {% set octo_tweets = states.sensor.octocambot_feed.attributes | first %}
#        {% set twit = octo_tweets.split("pic.twitter.com")[0] %}
#        {% set prefix = "@Octo_Cam_Bot: " %}
#        {{ [prefix, twit] | join("") }}
#    sfgabe_tweet_text:
#      friendly_name: "Latest SFGabe Tweet Text"
#      value_template: >
#        {% set sfgabe_tweets = states.sensor.sfgabe_feed.attributes|first %}
#        {% set twit = sfgabe_tweets.split("pic.twitter.com")[0] %}
#        {% set prefix = "@sfgabe: " %}
#        {{ [prefix, twit] | join("") }}

# - platform: command_line
#   name: "Latest Octo Tweet Text"
#   command: "cat /home/homeassistant/.homeassistant/www/images/tweets_octocam.txt"
#   value_template: >
#     {% set tweet_text = (value.split("TWEET")[1].split("DATE")[0] ) %}
#     {% set prefix = "@Octo_Cam_Bot" %}
#     {{ [prefix, tweet_text] | join("") }}
#
# - platform: command_line
#   name: "Latest Octo Tweet Date"
#   command: "cat /home/homeassistant/.homeassistant/www/images/tweets_octocam.txt"
#   value_template: >
#     {% set tweet_date = (value.split("DATE")[1].split("+")[0] ) %}
#     {% set prefix = "Posted" %}
#     {{ [prefix, tweet_date] | join("") }}
#
# - platform: command_line
#   name: "Latest Octo Image Link"
#   command: "cat /home/homeassistant/.homeassistant/www/images/tweets_octocam.txt"
#   value_template: >
#     {% set media_link = (value.split("pbs.twimg.com")[1].split("'")[0] ) %}
#     {% set prefix = "http://pbs.twimg.com" %}
#     {{ [prefix, media_link] | join("") }}
#
# - platform: command_line
#   name: "Latest SFGabe Tweet Text"
#   command: "cat /home/homeassistant/.homeassistant/www/images/tweets_sfgabe.txt"
#   value_template: >
#     {% set tweet_text = (value.split("TWEET")[1].split("DATE")[0] ) %}
#     {% set prefix = "@sfgabe" %}
#     {{ [prefix, tweet_text] | join("") }}
#
# - platform: command_line
#   name: "Latest SFGabe Tweet Date"
#   command: "cat /home/homeassistant/.homeassistant/www/images/tweets_sfgabe.txt"
#   value_template: >
#     {% set tweet_date = (value.split("DATE")[1].split("+")[0] ) %}
#     {% set prefix = "Posted" %}
#     {{ [prefix, tweet_date] | join("") }}
#
# - platform: command_line
#   name: "Latest SFGabe Image Link"
#   command: "cat /home/homeassistant/.homeassistant/www/images/tweets_sfgabe.txt"
#   value_template: >
#     {% set media_link = (value.split("pbs.twimg.com")[1].split("'")[0] ) %}
#     {% set prefix = "http://pbs.twimg.com" %}
#     {{ [prefix, media_link] | join("") }}

#- platform: random
#  name: Amazon Random Day Temp Number
#  entity_id: sensor.amazon_random_day_temp
#    minimum: "{{ states('sensor.monthly_amazon_temp_med') }}"
#    maximum: "{{ states('sensor.monthly_amazon_temp_max') }}"
#  unit_of_measurement: '°C'
#value: '{{ (range[(states.sensor.monthly_amazon_temp_med.state),(states.sensor.monthly_amazon_temp_max.state)] | random )}}'

#- platform: random
#  name: Amazon Random Night Temp Number
#  entity_id: sensor.amazon_random_day_temp
#  minimum: {{ states('sensor.monthly_amazon_temp_min') }}"
#  maximum: {{ states('sensor.monthly_amazon_temp_med') }}"
#  unit_of_measurement: '°C'

- platform: file
  name: 'Monthly Amazon Temp'
#  entity_id: sensor.monthly_amazon_temp
  file_path: /home/homeassistant/.homeassistant/scripts/amazon-temp-by-month.txt
  unit_of_measurement: '°C'
  value_template: '{{ (value.split(",")[1].split(",")[0]) | round(1) }}'

- platform: file
  name: 'Monthly Amazon pH'
  file_path: /home/homeassistant/.homeassistant/scripts/amazon-temp-by-month.txt
  unit_of_measurement: 'pH'
  value_template: '{{ (value.split(",")[2]) | round(1) }}'

#Google Sheets Amazon Stats
- platform: file
  name: 'Amazon Stats Raw'
  file_path: /home/homeassistant/.homeassistant/downloads/amazon_stats.csv
  scan_interval: 3600
- platform: template
  sensors:
    latest_amazon_stats_date:
      value_template: "{{ (states.sensor.amazon_stats_raw.state.split(',')[0])|timestamp_custom('%m %d, %Y', false) }}"
      friendly_name: 'Amazon Test Date'
    latest_amazon_stats_ph:
      friendly_name: 'Amazon Test pH'
      value_template: '{{ states.sensor.amazon_stats_raw.state.split(",")[1].split(",")[0] | float }}'
    latest_amazon_stats_nitrate:
      friendly_name: 'Amazon Test Nitrate'
      value_template: '{{ states.sensor.amazon_stats_raw.state.split(",")[2].split(",")[0] | float }}'
    latest_amazon_stats_nitrite:
      friendly_name: 'Amazon Test Nitrite'
      value_template: '{{ states.sensor.amazon_stats_raw.state.split(",")[3].split(",")[0] | float }}'
    latest_amazon_stats_ammonia:
      friendly_name: 'Amazon Test Ammonia'
      value_template: '{{ states.sensor.amazon_stats_raw.state.split(",")[4].split(",")[0] | float }}'
    latest_amazon_stats_water_change:
      friendly_name: 'Amazon Test Water Change'
      value_template: "{{ (states.sensor.amazon_stats_raw.state.split(',')[5])|timestamp_custom('%m %d, %Y', false) }}"

#Scrape For Reef Temp
- platform: scrape
  resource: http://www.surf-forecast.com/breaks/Kuta-Beach/seatemp
  select: "div#contdiv span.temp"
  name: ReefOceanTemp
  scan_interval: 3600

#Google Sheets Reef Stats
- platform: file
  name: 'Reef Stats Raw'
  file_path: /home/homeassistant/.homeassistant/downloads/reef_stats.csv
  scan_interval: 3600
- platform: template
  sensors:
    latest_reef_stats_date:
      value_template: "{{ (states.sensor.reef_stats_raw.state.split(',')[0])|timestamp_custom('%m %d, %Y', false) }}"
      friendly_name: 'Reef Test Date'
    latest_reef_stats_ph:
      friendly_name: 'Reef Test pH'
      value_template: '{{ states.sensor.reef_stats_raw.state.split(",")[1].split(",")[0] | float }}'
    latest_reef_stats_salinity:
      friendly_name: 'Reef Test Salinity'
      value_template: '{{ states.sensor.reef_stats_raw.state.split(",")[2].split(",")[0] | float }}'
    latest_reef_stats_nitrate:
      friendly_name: 'Reef Test Nitrate'
      value_template: '{{ states.sensor.reef_stats_raw.state.split(",")[3].split(",")[0] | float }}'
    latest_reef_stats_nitrite:
      friendly_name: 'Reef Test Nitrite'
      value_template: '{{ states.sensor.reef_stats_raw.state.split(",")[4].split(",")[0] | float }}'
    latest_reef_stats_ammonia:
      friendly_name: 'Reef Test Ammonia'
      value_template: '{{ states.sensor.reef_stats_raw.state.split(",")[5].split(",")[0] | float }}'
    latest_reef_stats_calcium:
      friendly_name: 'Reef Test Calcium'
      value_template: '{{ states.sensor.reef_stats_raw.state.split(",")[6].split(",")[0] | float }}'
    latest_reef_stats_phos:
      friendly_name: 'Reef Test Phosphates'
      value_template: '{{ states.sensor.reef_stats_raw.state.split(",")[7].split(",")[0] | float }}'
    latest_reef_stats_kh:
      friendly_name: 'Reef Test kH'
      value_template: '{{ states.sensor.reef_stats_raw.state.split(",")[8].split(",")[0] | float }}'
    latest_reef_stats_water_change:
      friendly_name: 'Reef Test Water Change'
      value_template: "{{ (states.sensor.reef_stats_raw.state.split(',')[9])|timestamp_custom('%m %d, %Y', false) }}"

- platform: file
  name: 'NOAA Daily Reef Temp Raw'
  file_path: /home/homeassistant/.homeassistant/www/images/east_java_bali.txt

- platform: file
  name: 'NOAA Daily Min Reef Temp'
  file_path: /home/homeassistant/.homeassistant/www/images/east_java_bali.txt
  unit_of_measurement: '°C'
  value_template: >
    {% set rawvalue = states.sensor.noaa_daily_reef_temp_raw.state %}
    {% set adjvalue =  (rawvalue.split(" ")[3]) | round(1) %}
    {{ (adjvalue - 3) | round(1) }}

- platform: file
  name: 'NOAA Daily Max Reef Temp'
  file_path: /home/homeassistant/.homeassistant/www/images/east_java_bali.txt
  unit_of_measurement: '°C'
  value_template: >
    {% set rawvalue = states.sensor.noaa_daily_reef_temp_raw.state %}
    {% set adjvalue =  (rawvalue.split(" ")[4]) | round(1) %}
    {{ (adjvalue - 3) | round(1) }}

- platform: min_max
  name: reef_avg_daily_temp
  type: mean
  entity_ids:
    - sensor.noaa_daily_min_reef_temp
    - sensor.noaa_daily_max_reef_temp

- platform: min_max
  name: reef_high_avg_daily_temp
  type: mean
  entity_ids:
    - sensor.reef_avg_daily_temp
    - sensor.noaa_daily_max_reef_temp

- platform: min_max
  name: reef_low_avg_daily_temp
  type: mean
  entity_ids:
    - sensor.reef_avg_daily_temp
    - sensor.noaa_daily_min_reef_temp

- platform: template
  sensors:
    reef_ocean_temp_c:
      friendly_name: "Reef Ocean Temp Celsius"
      value_template: '{{ (float(states("sensor.reefoceantemp"))) }}'
    reef_ocean_temp_f:
      unit_of_measurement: '°F'
      friendly_name: "Reef Ocean Temp Fahrenheit"
      value_template: '{{ ((float(states("sensor.reef_ocean_temp_c")) * 9 / 5 )  +  32) | round(1) }}'

- platform: multiscrape
  name: ReefSunriseTides
  resource: https://www.gaisma.com/en/location/bali.html
  scan_interval: 7200
  selectors:
    reefsunrisetides:
      name: ReefSunriseTides
      select: 'td.sunshine:nth-of-type(2)'
      value_template: '{{ (value.split(",")[0]) }}'

- platform: multiscrape
  name: ReefSunsetTides
  resource: https://www.gaisma.com/en/location/bali.html
  scan_interval: 7200
  selectors:
    reefsunsettides:
      name: ReefSunsetTides
      select: 'td.sunshine:nth-of-type(3)'
      value_template: '{{ (value.split(",")[0]) }}'

# - platform: scrape
#   resource: https://www.gaisma.com/en/location/bali.html
#   select: "td.sunshine:first"
#   name: ReefSunriseTides
#   scan_interval: 7200
#  value_template: '{{ (value.split(" h")[0]) }}'

# - platform: scrape
#   resource: https://www.gaisma.com/en/location/bali.html
#   select: "td.sunshine:nth-of-type(3):first"
#   name: ReefSunsetTides
#   scan_interval: 7200
#  value_template: '{{ (value }}'

- platform: scrape
  resource: https://tides4fishing.com/as/west-indonesia/banjuwangi-bali-str
  select: "div.grafico_salida_puesta_luna_texto div.grafico_estado_actual_texto1 p"
  name: ReefMoonriseTides
  scan_interval: 7200
  value_template: '{{ (value.split("at ")[1].split(" h")[0]) }}'

- platform: scrape
  resource: https://tides4fishing.com/as/west-indonesia/banjuwangi-bali-str
  select: "div.grafico_salida_puesta_luna_texto div.grafico_estado_actual_texto1 p"
  name: ReefMoonsetTides
  scan_interval: 7200
  value_template: '{{ (value.split("at ")[2].split(" h")[0]) }}'

- platform: uptime
  name: Time Online
  unit_of_measurement: hours

- platform: sql
  db_url: !secret config_db_fs_url
  queries:
    - name: "MariaDB Database Size"
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length)/1024/1024, 1) "value" FROM information_schema.tables WHERE table_schema="hass" GROUP BY table_schema;'
      column: 'value'
      unit_of_measurement: MB

- platform: template
  sensors:
    switches_on_count:
      friendly_name: Switches On
      value_template: >
        {{ states.switch|selectattr('state','equalto','on')|list|length }}
    lights_on_count:
      friendly_name: Lights On
      value_template: >
        {%- set lights = [
          states.light.bedroom_desk,
          states.light.bedroom,
          states.light.big_o,
          states.light.desk,
          states.light.entry_light,
          states.light.et_figure,
          states.light.flux_capacitor,
          states.light.kitchen,
          states.light.table,
          states.light.thundercloud
         ] -%}
         {{lights | selectattr('state','eq','on') | list | count}}
    motion_detected_count:
      friendly_name: Motion Detected Count
      value_template: >
          {%- set detectors = [
            states.binary_sensor.bedroom_motion,
            states.binary_sensor.birdfeed_motion,
            states.binary_sensor.bathroom_motion,
            states.binary_sensor.dashboard_motion,
            states.binary_sensor.reef_notify_motion,
            states.binary_sensor.notify_box_motion,
            states.binary_sensor.entry_motion,
            states.binary_sensor.homecam_motion,
            states.binary_sensor.kiosk_att_motion
          ] -%}
          {{detectors | selectattr('state','eq','on') | list | count}}
    switches_count:
      friendly_name: 'Number of Switches'
      value_template: >
        {%- set domains = ['switch'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
    lights_count:
      friendly_name: 'Number of Lights'
      value_template: >
        {%- set domains = ['light'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
    devices_count:
      friendly_name: 'Number of Devices'
      value_template: >
        {%- set domains = ['device_tracker'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}

#Empire State Colors
- platform: scrape
  name: empire_state_lights_info_date
  resource: http://www.esbnyc.com/explore/tower-lights
  select: 'div.is-today h2'
  scan_interval: 10800

- platform: scrape
  name: empire_state_lights_info_color
  resource: http://www.esbnyc.com/explore/tower-lights
  select: 'div.is-today h3'
  scan_interval: 10800

- platform: scrape
  resource: http://www.esbnyc.com/explore/tower-lights
  select: '.background-image-wrapper'
  attribute: style
  name: empire_state_lights_pic_url
  scan_interval: 10800
  value_template: >
    {% set url = value.split("(", 1)[1].split(")")[0] %}
    {{ url }}

#Calendars
- platform: template
  sensors:
    template_calendar_next:
      friendly_name: Next Event
      value_template: '{{ states.calendar.gabethisisgabescom.attributes.message }}'

- platform: template
  sensors:
    nextcal_location:
      value_template: '{{ states.calendar.gabethisisgabescom.attributes.location }}'
      friendly_name: 'Calendar Location'
      unit_of_measurement: 'address'
    nextcal_start_time:
      value_template: '{{ states.calendar.gabethisisgabescom.attributes.start_time| timestamp_custom("%h %d, %Y %k:%M %P")}}'
      friendly_name: 'Start Time'
    nextcal_end_time:
      value_template: '{{ states.calendar.gabethisisgabescom.attributes.end_time| timestamp_custom("%h %d, %Y %k:%M %P") }}'
      friendly_name: 'End Time'
    nextcal_start_day:
      value_template: >
        {%- set date = as_timestamp(states.calendar.gabethisisgabescom.attributes.start_time) -%}
        {{ date | timestamp_custom("%A, %B %d") }}
      friendly_name: 'Start Day'
    nextcal_start_time_short:
      value_template:  >
        {%- set date = as_timestamp(states.calendar.gabethisisgabescom.attributes.start_time) -%}
        {{ date | timestamp_custom("%k:%M %P") }}
      friendly_name: 'Start Time Short'
    nextcal_end_time_short:
      value_template: >
        {%- set date = as_timestamp(states.calendar.gabethisisgabescom.attributes.end_time) -%}
        {{ date | timestamp_custom("%k:%M %P") }}
      friendly_name: 'End Time Short'
    nextcal_message:
      value_template: '{{ states.calendar.gabethisisgabescom.attributes.message }}'
      friendly_name: 'Event'
    new_nextcal_location:
      value_template: '{% if is_state("sensor.nextcal_location", "None") %}{{ zone.home }}{% else %}{{ states.calendar.gabethisisgabescom.attributes.location }}{% endif %}'
      friendly_name: 'Location'
    nextcal_calc_leave_time:
      value_template: '{{ (as_timestamp(states.calendar.gabethisisgabescom.attributes.start_time) - states.sensor.home_to_next_appt.attributes.duration.split(" ")[0] | int *60 ) | timestamp_custom("%m %d, %Y %-I:%M %p") }}'
      friendly_name: 'Leave Time'
    nextcal_sys_time:
      value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%A %h %d, %Y %k:%M %P")) }}'

- platform: template
  sensors:
    template_calendar_birthday:
       friendly_name: Upcoming Birthday
       value_template: '{{ states.calendar.contacts.attributes.message }}'
    template_calendar_birthday_date:
      value_template: '{{ states.calendar.contacts.attributes.start_time| timestamp_custom("%h %d, %Y %k:%M %P")}}'
      friendly_name: 'Date'

    amazonsysinfo_template_name:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.name }}'
      friendly_name: Amazon Server Name
      entity_id: sensor.reefsysinfo_template_name
    amazonsysinfo_template_version:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.version }}'
      friendly_name: Amazon Server Version
      entity_id: sensor.rreefsysinfo_template_version
    amazonsysinfo_template_uptime:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.uptime }}'
      friendly_name: Amazon Server Uptime
      entity_id: sensor.reefsysinfo_template_uptime
    amazonsysinfo_template_ip:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.ip }}'
      friendly_name: Amazon Server IP
      entity_id: sensor.reefsysinfo_template_ip
    amazonsysinfo_template_cpu_temperature:
      value_template: '{{ states.sensor.amazonpisysuptime.attributes.cpu_temperature }}'
      friendly_name: Amazon Server CPU Temp
      entity_id: sensor.amazonsysinfo_template_cpu_temperature

    notify_box_line1_split:
      value_template: '{{ states.input_text.notify_box_full_message.state.split(" ")[:3]|join(" ") }}'
    notify_box_line2_split:
      value_template: '{{ states.input_text.notify_box_full_message.state.split(" ")[3:6]|join(" ") }}'
    notify_box_line3_split:
      value_template: '{{ states.input_text.notify_box_full_message.state.split(" ")[6:9]|join(" ") }}'
    notify_box_line4_split:
      value_template: '{{ states.input_text.notify_box_full_message.state.split(" ")[9:12]|join(" ") }}'
#Bustime Sensors
#- platform: gtfs_realtime
#  name: Next Bus
#  trip_update_url: !secret gtfs_bus_trip_update_url
#  vehicle_position_url: !secret gtfs_bus_trip_position_url
#  offset: 7
#  departures:
#  - name: M14A Crosstown at Clinton Street
#    route: M14A
#    stopid: 401150
#  - name: 'M15SBS Uptown Allen at Grand'
#    route: "M15-SBS"
#    stopid: 405320
#  - name: M15 Local Uptown Allen at Grand
#    route: M15
#    stopid: 405320

#Bus M15
- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 Stops 0 Local Uptown Allen at Grand
  select: "ArrivalProximityText"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 0 Distance Local Uptown Allen at Grand
  select: "DistanceFromStop"
  index: 0
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 0 Destination Local Uptown Allen at Grand
  select: "DestinationName"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 0 Name Local Uptown Allen at Grand
  select: "PublishedLineName"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 Stops 1 Local Uptown Allen at Grand
  select: "ArrivalProximityText"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 1 Distance Local Uptown Allen at Grand
  select: "DistanceFromStop"
  index: 1
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 1 Name Local Uptown Allen at Grand
  select: "PublishedLineName"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 1 Destination Local Uptown Allen at Grand
  select: "DestinationName"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 2 Stops Local Uptown Allen at Grand
  select: "ArrivalProximityText"
  index: 2

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 2 Distance Local Uptown Allen at Grand
  select: "DistanceFromStop"
  index: 2
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 2 Name Local Uptown Allen at Grand
  select: "PublishedLineName"
  index: 2

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15 2 Destination Local Uptown Allen at Grand
  select: "DestinationName"
  index: 2

#Bus M15SBS
- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 0 Stop Uptown Allen at Grand
  select: "ArrivalProximityText"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 0 Distance Uptown Allen at Grand
  select: "DistanceFromStop"
  index: 0
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 0 Name Uptown Allen at Grand
  select: "PublishedLineName"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 0 Destination Uptown Allen at Grand
  select: "DestinationName"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 1 Stop Uptown Allen at Grand
  select: "ArrivalProximityText"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 1 Distance Uptown Allen at Grand
  select: "DistanceFromStop"
  index: 1
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 1 Name Uptown Allen at Grand
  select: "PublishedLineName"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 1 Destination Uptown Allen at Grand
  select: "DestinationName"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 2 Stop Uptown Allen at Grand
  select: "ArrivalProximityText"
  index: 2

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 2 Distance Uptown Allen at Grand
  select: "DistanceFromStop"
  index: 2
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 2 Name Uptown Allen at Grand
  select: "PublishedLineName"
  index: 2

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=405320&LineRef=MTA%20NYCT_M15%2B&version=2&StopMonitoringDetailLevel=minimum
  name: SIRI Bus M15SBS Local 2 Destination Uptown Allen at Grand
  select: "DestinationName"
  index: 2

#Bus M14A
- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 0 Stop Crosstown at Clinton
  select: "ArrivalProximityText"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 0 Distance Crosstown at Clinton
  select: "DistanceFromStop"
  index: 0
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 0 Name Crosstown at Clinton
  select: "PublishedLineName"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 0 Destination Crosstown at Clinton
  select: "DestinationName"
  index: 0

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 1 Stop Crosstown at Clinton
  select: "ArrivalProximityText"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 1 Distance Crosstown at Clinton
  select: "DistanceFromStop"
  index: 1
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 1 Name Crosstown at Clinton
  select: "PublishedLineName"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 1 Destination Crosstown at Clinton
  select: "DestinationName"
  index: 1

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 2 Stop Crosstown at Clinton
  select: "ArrivalProximityText"
  index: 2

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 2 Distance Crosstown at Clinton
  select: "DistanceFromStop"
  index: 2
  unit_of_measurement: meters

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 2 Name Crosstown at Clinton
  select: "PublishedLineName"
  index: 2

- platform: scrape
  resource: http://bustime.mta.info/api/siri/stop-monitoring.xml?key=5c0f0368-aa51-42db-adf0-a437063038bb&OperatorRef=MTA&MonitoringRef=401150&version=2&StopMonitoringDetailLevel=minimum&LineRef=MTA%20NYCT_M14A%2B
  name: SIRI Bus M14A 2 Destination Crosstown at Clinton
  select: "DestinationName"
  index: 2

#- platform: gtfs_realtime
#  name: Essex Subway B D F M
#  trip_update_url: !secret gtfs_subway1_trip_update_url
#  offset: 10
#  departures:
#  - name: Northbound F Delancey St
#    stopid: F15N
#    route: F
#  - name: Northbound M Essex St
#    stopid: M18N
#    route: M
#  - name: Northbound B Grand St
#    stopid: D22N
#    route: B
#  - name: Northbound D Grand St
#    stopid: D22N
#    route: D
#  - name: Southbound F East Broadway
#    stopid: F16S
#    route: F

#- platform: gtfs_realtime
#  name: Essex Subway J Z
#  trip_update_url: !secret gtfs_subway2_trip_update_url
#  offset: 10
#  departures:
#  - name: Northbound J Essex St
#    stopid: M18N
#    route: J
#  - name: Northbound Z Essex St
#    stopid: M18N
#    route: Z

#- platform: google_travel_time
#  name: Home to Work
#  api_key: !secret google_travel_time_api_key
#  origin: !secret google_travel_time_origin
#  destination: !secret google_travel_time_destination
#  options:
#    mode: transit

#- platform: google_travel_time
#  name: Work to Home
#  api_key: !secret google_travel_time_api_key
#  destination: !secret google_travel_time_origin
#  origin: !secret google_travel_time_destination
#  options:
#    mode: transit

#- platform: google_travel_time
#  name: Home to Next Appt
#  api_key: !secret google_travel_time_api_key
#  origin: !secret google_travel_time_origin
#  destination: sensor.new_nextcal_location
#  options:
#    arrival_time: "{{ states('sensor.nextcal_start_time') }}"
#    mode: transit

- platform: template
  scan_interval: 240
  sensors:
   battery_gabes_mate:
     friendly_name: "Battery Status"
     value_template: '{{ states.device_tracker.gabesnotegps.attributes.battery_level | default(0) |int() }}'
     entity_id: sensor.battery_gabes_mate
     unit_of_measurement: "%"
     icon_template: >
       {% set battery_level = states.device_tracker.gabesnotegps.attributes.battery_level | default(0) |int %}
       {% set battery_round = (battery_level / 10) |int * 10 %}
       {% if battery_round >= 100 %}
         mdi:battery
       {% elif battery_round > 0 %}
         mdi:battery-{{ battery_round }}
       {% else %}
         mdi:battery-alert
       {% endif %}
   altitude_gabes_mate:
     friendly_name: "Altitude"
     value_template: '{{ states.device_tracker.gabesnotegps.attributes.altitude | round(1) }}'
     entity_id: sensor.gps_altitude_gabes_mate
     unit_of_measurement: "m"
   activity_gabes_mate:
     friendly_name: "Activity"
     value_template: '{{ states.device_tracker.gabesnotegps.attributes.activity }}'
     entity_id: sensor.activity_gabes_mate
   direction_gabes_mate:
     friendly_name: "Direction"
     value_template: '{{ states.device_tracker.gabesnotegps.attributes.direction }}'
     entity_id: sensor.direction_gabes_mate
   speed_gabes_mate:
     friendly_name: "Speed"
     value_template: '{{ states.device_tracker.gabesnotegps.attributes.speed | round(1) }}'
     entity_id: sensor.speed_gabes_mate
     unit_of_measurement: "mph"
   accuracy_gabes_mate:
     friendly_name: "Accuracy"
     value_template: '{{ states.device_tracker.gabesnotegps.attributes.gps_accuracy | round(1) }}'
     entity_id: sensor.gps_accuracy_gabes_mate
     unit_of_measurement: "m"
   # provider_gabes_mate:
   #   friendly_name: "Provider"
   #   value_template: {{ states("device_tracker.gabesnotegps.attributes.provider") }}
   #   entity_id: sensor.net_provider_gabes_mate
   source_type_gabes_mate:
     friendly_name: "Source Type"
     value_template: '{{ states.device_tracker.gabesnotegps.attributes.source_type }}'
     entity_id: sensor.source_type_gabes_mate
   last_seen_gabes_mate:
     friendly_name: "Last Seen"
     value_template: '{{ relative_time (states.device_tracker.gabesnotegps.last_updated) + " ago"}}'
     entity_id: sensor.last_seen_gabes_mate

- platform: template
  sensors:
    gabe_status:
      value_template: '{{ states.input_select.gabe_status_dropdown.state }}'
      friendly_name: 'Gabe'
    aj_status:
      value_template: '{{ states.input_select.aj_status_dropdown.state }}'
      friendly_name: 'AJ'
#
# #System Monitor
# - platform: version
#   name: HA Installed Version
#   scan_interval: 86400

# cpu speed raspberry device
- platform: cpuspeed

# system monitor raspberry device
- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: memory_use
    - type: memory_free
    - type: processor_use
    - type: swap_use_percent
    - type: swap_use
    - type: swap_free
    - type: last_boot
## enp1s0
    - type: network_in
      arg: enp1s0
    - type: network_out
      arg: enp1s0
    - type: packets_in
      arg: enp1s0
    - type: packets_out
      arg: enp1s0
    - type: ipv4_address
      arg: enp1s0
    - type: ipv6_address
      arg: enp1s0

# - platform: synologydsm
#   host: !secret synology_host
#   username: !secret synology_username
#   password: !secret synology_password

- platform: command_line
  name: "HA Uptime"
  command: !secret config_db_uptime_command
  scan_interval: 720
  value_template: >-
    {% set uptime = value | int %}
    {% set seconds = uptime % 60 %}
    {% set minutes = ((uptime % 3600) / 60) | int %}
    {% set hours = ((uptime % 86400) / 3600) | int %}
    {% set days = (uptime / 86400) | int %}
    {%- if days > 0 -%}
      {%- if days == 1 -%}
        1 day
      {%- else -%}
        {{ days }} days
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {%- if hours > 0 -%}
      {%- if hours == 1 -%}
        1 hour
      {%- else -%}
        {{ hours }} hours
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {%- if minutes > 0 -%}
      {%- if minutes == 1 -%}
        1 minute
      {%- else -%}
        {{ minutes }} minutes
      {%- endif -%}
    {%- endif -%}

- platform: dnsip
  name: "IP Address"

#atomicpi uptime
- platform: template
  sensors:
    atomicpi_last_boot:
      friendly_name: Atomic Pi Last Boot
      value_template: >
        {% set date = as_timestamp(states('sensor.last_boot')) | timestamp_custom('%d') %}
        {% set date = '{:01}'.format(date | int) %}
        {% if date in ('1', '21', '31') %}
            {% set date = date ~ 'st' %}
        {% elif date in ('2', '22') %}
            {% set date = date ~ 'nd' %}
        {% elif date in ('3', '23') %}
            {% set date = date ~ 'rd' %}
        {% else %}
            {% set date = date ~ 'th' %}
        {% endif %}
        {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%H:%M on %a') }} {{ date }} {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%b %Y') }}
    atomicpi_uptime:
      friendly_name: Atomic Pi Uptime
      entity_id: sensor.time
      value_template: >
        {% set up_time = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}
        {% set minutes = (up_time // 60) | int %}
        {% set hours = (minutes // 60) %}
        {% set days = (hours // 24) %}
        {% set weeks = (days // 7) %}
        {% set minutes = (minutes % 60) %}
        {% set hours =  (hours % 24) %}
        {% set days = (days % 7) %}
        {% macro phrase(value, name) %}
                    {%- set value = value %}
                    {%- set end = 's' if value > 1 else '' %}
                    {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
        {%- endmacro %}
        {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
        {% set last_comma = text.rfind(',') %}
        {% if last_comma != -1 %}
            {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
        {% endif %}
        {{ text }}

- platform: steam_online
  api_key: !secret steam_api_key
  accounts:
    - 76561199086159554

- platform: template
  sensors:
    npr_news_mp3_link:
      friendly_name: 'NPR News mp3 link'
      value_template: >
        {{ states.sensor.news_npr_audio.attributes.entries[0].link }}

- platform: template
  sensors:
    npr_news_mp3_date:
      friendly_name: 'NPR News mp3 date'
      value_template: >
        {{ states.sensor.news_npr_audio.attributes.entries[0].title }}

- platform: feedparser
  name: news_npr_audio
  feed_url: 'https://www.npr.org/rss/podcast.php?id=500005'
  date_format: '%a, %d %b %I:%M %p'
  inclusions:
    - title
    - link
    - description
    - pubDate

#- platform: feedparser
#  name: sfgabe Feed
#  feed_url: 'https://twitrss.me/twitter_user_to_rss/?user=sfgabe'
#  date_format: '%a, %d %b %I:%M %p'
#  inclusions:
#    - title
#    - link
#    - description
#    - image
#    - pubDate

#- platform: feedparser
#  name: OctoCamBot Feed
#  feed_url: 'https://twitrss.me/twitter_user_to_rss/?user=octo_cam_bot'
#  date_format: '%a, %d %b %I:%M %p'
#  inclusions:
#    - title
#    - link
#    - description
#    - image
#    - pubDate

- platform: history_stats
  name: stats_work
  entity_id: people.gabe
  state: 'Work'
  type: time
  end: '{{ now() }}'
  duration:
    days: 7

- platform: history_stats
  name: stats_bed
  entity_id: input_boolean.bed_occupancy
  state: 'on'
  type: time
  end: '{{ now() }}'
  duration:
    days: 7

- platform: history_stats
  name: stats_home
  entity_id: people.gabe
  state: 'home'
  type: time
  end: '{{ now() }}'
  duration:
    days: 7

#OctoPrint 3D Printer
- platform: octoprint
  name: OctoPrint
  monitored_conditions:
    - Current State
    - Temperatures
    - Job Percentage
    - Time Elapsed
    - Time Remaining

#######################################################################
### Other OCTOPRINT ###
#################
- platform: rest
  resource: !secret octoprint_fileinfo
  name: "Octoprint Name"
  value_template: '{{value_json.job.file.display}}'

- platform: rest
  resource: !secret octoprint_fileinfo
  name: "Octoprint Filament Used"
  value_template: '{{ value_json.job.filament.tool0.length | float / 1000 }}'
  unit_of_measurement: 'm'

- platform: rest
  resource: !secret octoprint_fileinfo
  name: "Octoprint File Size"
  value_template: '{{ value_json.job.file.size | float / 1000000 }}'
  unit_of_measurement: 'MB'

- platform: template
  sensors:
    octoprint_filament_use:
      friendly_name: "Octoprint Filament Use"
      unit_of_measurement: 'm'
      value_template: "{{ states('sensor.octoprint_filament_used') | round(1) }}"
    octoprint_file_size_mb:
      friendly_name: "Octoprint File Size"
      unit_of_measurement: 'MB'
      value_template: "{{ states('sensor.octoprint_file_size') | round(1) }}"
    octoprint_filament_cost:
### 1kg = 18€ und ca.345m Filament = 0.052€
      friendly_name: "Octoprint Filament Cost"
      unit_of_measurement: '€'
      value_template: "{{ states('sensor.octoprint_filament_use') | multiply(0.052) }}"

- platform: rest
  name: Octoprint Power
  resource: !secret octoprint_enclosure
  headers:
      content-type: application/json
  json_attributes:
    - status
    - index_id

- platform: rest
  name: Octoprint Power Switch 1 Status
  resource: http://octopi.local/plugin/enclosure/outputs/2
  value_template: '{{ value_json }}'

- platform: rest
  name: Octoprint Power Switch 2 Status
  resource: http://octopi.local/plugin/enclosure/outputs/3
  value_template: '{{ value_json }}'

- platform: rest
  name: Octoprint Bedlight Switch Status
  resource: http://octopi.local/plugin/enclosure/outputs/5
  value_template: '{{ value_json }}'

- platform: rest
  name: Octoprint 12v External Switch Status
  resource: http://octopi.local/plugin/enclosure/outputs/6
  value_template: '{{ value_json }}'

- platform: rest
  name: Octoprint Timelapse Name
  resource: !secret octoprint_timelapse
  value_template: "{{ (value_json.files | sort(attribute='date'))[-1].name  }}"

- platform: rest
  name: Octoprint Timelapse URL
  resource: !secret octoprint_timelapse
  value_template: "{{(value_json.files | sort(attribute='date'))[-1].url }}"

- platform: rest
  name: Octoprint Timelapse Date
  resource: !secret octoprint_timelapse
  value_template: "{{(value_json.files | sort(attribute='date'))[-1].date }}"

- platform: template
  sensors:
    octoprint_timelapse_url_full:
      value_template: >-
        {% set url = states.sensor.octoprint_timelapse_url.state %}
        {% set prefix = "http://octopi.local" %}
        {% set suffix = "?apikey=D46893BD9B1E40E8B7137F5BDDDD614E" %}
        {{ [prefix, url, suffix] | join("") }}

- platform: template
  sensors:
    octoprint_hotend:
      friendly_name: 'Hotend Actual'
      value_template: "{{ ((states.sensor.octoprint_actual_tool0_temp.state | float-32) | float*(5/9)) | round(2) }} °C"
    octoprint_bed:
      friendly_name: 'Bed Actual'
      value_template: "{{ ((states.sensor.octoprint_actual_bed_temp.state | float-32) | float*(5/9)) | round(2) }} °C"
    octoprint_hotend_target:
      friendly_name: 'Hotend Target'
      value_template: "{{ ((states.sensor.octoprint_target_tool0_temp.state | float-32) | float*(5/9)) | round(2) }} °C"
    octoprint_bed_target:
      friendly_name: 'Bed Target'
      value_template: "{{ ((states.sensor.octoprint_target_bed_temp.state | float-32) | float*(5/9)) | round(2) }} °C"
    octoprint_time_elapsed_format:
      friendly_name: 'Printing Time Elapsed'
      value_template: >-
        {% set etime = states.sensor.octoprint_time_elapsed.state | int %}
        {% set seconds = etime % 60 %}
        {% set minutes = ((etime % 3600) / 60) | int %}
        {% set hours = ((etime % 86400) / 3600) | int %}
        {% set days = (etime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 day
          {%- else -%}
            {{ days }} days
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minute
          {%- else -%}
            {{ minutes }} minutes
          {%- endif -%}
        {%- endif -%}
    octoprint_time_remaining_format:
      friendly_name: 'Printing Time Remaining'
      value_template: >-
        {% set rtime = states.sensor.octoprint_time_remaining.state | int %}
        {% set seconds = rtime % 60 %}
        {% set minutes = ((rtime % 3600) / 60) | int %}
        {% set hours = ((rtime % 86400) / 3600) | int %}
        {% set days = (rtime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 day
          {%- else -%}
            {{ days }} days
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minute
          {%- else -%}
            {{ minutes }} minutes
          {%- endif -%}
        {%- endif -%}

#Amazon ATO Level
- platform: rest
  name: Amazon ATO Level
  resource: http://192.168.50.201/checklevel
  scan_interval: 170000
  headers:
      content-type: application/json

#ReefControlPi Data
- platform: rest
  name: ReefControlPiSysUptime
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  json_attributes:
    - name
    - ip
    - uptime
    - cpu_temperature
    - version
  resource: http://192.168.50.250/api/info
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: template
  sensors:
    reefsysinfo_template_name:
      value_template: '{{ states.sensor.reefcontrolpisysuptime.attributes.name }}'
      friendly_name: Reef Server Name
      entity_id: sensor.reefsysinfo_template_name
    reefsysinfo_template_version:
      value_template: '{{ states.sensor.reefcontrolpisysuptime.attributes.version }}'
      friendly_name: Reef Server Version
      entity_id: sensor.rreefsysinfo_template_version
    reefsysinfo_template_uptime:
      value_template: '{{ states.sensor.reefcontrolpisysuptime.attributes.uptime }}'
      friendly_name: Reef Server Uptime
      entity_id: sensor.reefsysinfo_template_uptime
    reefsysinfo_template_ip:
      value_template: '{{ states.sensor.reefcontrolpisysuptime.attributes.ip }}'
      friendly_name: Reef Server IP
      entity_id: sensor.reefsysinfo_template_ip
    reefsysinfo_template_cpu_temperature:
      value_template: >
            {%- set cputemp = (states.sensor.reefcontrolpisysuptime.attributes.cpu_temperature) -%}
            {{ (cputemp.split("'")[0] | float | round(1)) }}
      friendly_name: Reef Server CPU Temp
      unit_of_measurement: '°C'
      entity_id: sensor.reefsysinfo_template_cpu_temperature
    redfield_ratio:
      value_template: "{{ ((float(states('input_number.reef_nitrate'))) / (float(states('input_number.reef_phosphate')))) | round(1) }}"
      unit_of_measurement: 'ratio'
      friendly_name: 'NO3(n):PO4(1)'

- platform: mqtt
  state_topic: "reef_water_temperature_reading"
  name: OnlyReefControlPiTemp
  value_template: '{{ value | round(2) }}'
  unit_of_measurement: '°F'

# - platform: rest
#   name: OnlyReefControlPiTemp
#   username: !secret reefcontrolpi_username
#   password: !secret reefcontrolpi_password
#   authentication: basic
#   resource: http://192.168.50.250/api/tcs/2/usage
#   headers:
#       Connection: keep-alive
#       content-type: application/json
#       Referer: http://192.168.50.250/
#       Cookie: !secret reefcontrolpi_cookie
#   value_template: '{{ value_json.current[-1].value | round(2) }}'
#   unit_of_measurement: '°F'

- platform: rest
  name: ReefControlPiError
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/errors
  json_attributes:
    - message
    - time
    - count
    - id
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: OnlyReefControlPiTempTime
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/tcs/2/usage
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
  value_template: '{{ value_json.current[-1].time }}'

- platform: rest
  name: ReefControlPiLightBrightnessInfo
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/lights/9
  json_attributes:
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
  value_template: '{{ value_json.split("value")[0].split(",")[0] }}'

- platform: rest
  name: ReefControlPiLightColorInfo
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/lights/10
  json_attributes:
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
  value_template: '{{ value_json }}'


# - platform: rest
#   name: ReefControlPiLightBrightness
#   username: !secret reefcontrolpi_username
#   password: !secret reefcontrolpi_password
#   authentication: basic
#   resource: http://192.168.50.250/api/lights/4
#   value_template: '{{ value_json }}'
#   headers:
#       Connection: keep-alive
#       content-type: application/json
#       Referer: http://192.168.50.250/
#       Cookie: !secret reefcontrolpi_cookie
#
- platform: mqtt
  state_topic: "kessil_brightness_kessil_brightness"
  name: ReefControlPiLightBrightness
  value_template: '{{ value | round(2) }}'

- platform: mqtt
  state_topic: "kessil_color_kessil_color"
  name: ReefControlPiLightColor
  value_template: '{{ value | round(2) }}'

- platform: mqtt
  state_topic: "refugium_refugium"
  name: ReefControlPiRefugiumLightBrightness
  value_template: '{{ value | round(2) }}'
  unit_of_measurement: '%'

- platform: mqtt
  state_topic: "ato_float_sensor_state"
  name: ReefControlPiAtoFloatSensorState
  # value_template: >-
  #   {% if value == '1' %}OK
  #   {% elif value == '0' %}Low
  #   {% else %}n/a
  #   {% endif %}

- platform: mqtt
  state_topic: "ato_float_sensor_usage"
  name: ReefControlPiAtoFloatSensorUsage

- platform: mqtt
  state_topic: "ato_ato_float_sensor_state"
  name: ReefControlPiAto2FloatSensorState
  # value_template: >-
  #   {% if value == '1' %}OK
  #   {% elif value == '0' %}Low
  #   {% else %}n/a
  #   {% endif %}

- platform: mqtt
  state_topic: "ph_ph_sensor"
  name: ReefControlPipH
  value_template: '{{ value | float | round(2) }}'

- platform: mqtt
  state_topic: "ato_ato_float_sensor_usage"
  name: ReefControlPiAto2FloatSensorUsage

- platform: mqtt
  state_topic: "system_load5"
  name: ReefControlPiSystemLoad
  value_template: '{{ value | float | round(2) }}'

- platform: mqtt
  state_topic: "system_mem_used"
  name: ReefControlPiSystemMemUsed
  value_template: '{{ value | float | round(2) }}'
  unit_of_measurement: '%'

- platform: mqtt
  state_topic: "system_under_voltage"
  name: ReefControlPiSystemUnderVoltage
  value_template: '{{ value | float | round(0) }}'

# - platform: rest
#   name: ReefControlPiLightColor
#   username: !secret reefcontrolpi_username
#   password: !secret reefcontrolpi_password
#   authentication: basic
#   resource: http://192.168.50.250/api/lights/3
#   value_template: '{{ value_json }}'
#   headers:
#       Connection: keep-alive
#       content-type: application/json
#       Referer: http://192.168.50.250/
#       Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiPump1Name
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/doser/pumps/1
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
  value_template: '{{ value_json.name }}'

- platform: rest
  name: ReefControlPiPump1Status
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/doser/pumps/1
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
  value_template: >-
    {% set pump_1_status = value_json.id["1"].enable %}
    {% if pump_1_status == "true" %}Scheduled
    {% elif pump_1_status == "false" %}Off
    {% else %}n/a
    {% endif %}

- platform: rest
  name: ReefControlPiDoserB
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/2
  json_attributes:
    - name
    - regiment
    - duration
    - speed
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiDoserBUsage
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/doser/pumps/2/usage
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
  value_template: '{{ value_json.current[-1].time }}'


- platform: rest
  name: ReefControlPiDoserA
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/3
  json_attributes:
    - name
    - regiment
    - duration
    - speed
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiDoserAUsage
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/doser/pumps/3/usage
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
  value_template: '{{ value_json.current[-1].time }}'

- platform: rest
  name: ReefControlPiRelay1
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/1
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiRelay2
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/2
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiRefugiumLight
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/6
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiGreenLED
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/15
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiRedLED
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/16
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiTopOffSwitch
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/20
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiDoser1Switch
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/23
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiDoser2Switch
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/28
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

# - platform: rest
#   name: ReefControlPiLatestDoser
#   username: !secret reefcontrolpi_username
#   password: !secret reefcontrolpi_password
#   authentication: basic
#   resource: http://192.168.50.250/api/doser/pumps/1/usage
#   headers:
#       Connection: keep-alive
#       content-type: application/json
#       Referer: http://192.168.50.250/
#       Cookie: !secret reefcontrolpi_cookie
#   value_template: '{{ value_json.current[-1].time }}'

- platform: rest
  name: ReefControlPiLatestTopOff
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  json_attributes:
    - current
  resource: http://192.168.50.250/api/doser/pumps/1/usage
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
  value_template: '{{ value_json.current[-1].time }}'

- platform: rest
  name: ReefControlPiEnclosureFan
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/30
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie

- platform: rest
  name: ReefControlPiRelay2
  username: !secret reefcontrolpi_username
  password: !secret reefcontrolpi_password
  authentication: basic
  resource: http://192.168.50.250/api/equipment/31
  json_attributes:
    - name
    - on
  headers:
      Connection: keep-alive
      content-type: application/json
      Referer: http://192.168.50.250/
      Cookie: !secret reefcontrolpi_cookie
#
# - platform: rest
#   name: ReefControlPiPump2Name
#   username: !secret reefcontrolpi_username
#   password: !secret reefcontrolpi_password
#   authentication: basic
#   resource: http://192.168.50.250/api/doser/pumps/4
#   headers:
#       Connection: keep-alive
#       content-type: application/json
#       Referer: http://192.168.50.250/
#       Cookie: !secret reefcontrolpi_cookie
#   value_template: '{{ value_json.name }}'
#
# - platform: rest
#   name: ReefControlPiPump2Power
#   username: !secret reefcontrolpi_username
#   password: !secret reefcontrolpi_password
#   authentication: basic
#   resource: http://192.168.50.250/api/doser/pumps/4
#   headers:
#       Connection: keep-alive
#       content-type: application/json
#       Referer: http://192.168.50.250/
#       Cookie: !secret reefcontrolpi_cookie
#   value_template: '{{ value_json.on }}'

- platform: template
  sensors:
    reefcontrolpifloat:
      friendly_name: 'ReefControlPiFloat'
      value_template: >
        {% set float_status = (states('sensor.reefcontrolpiatofloatsensorstate')) %}
        {% if float_status >= '1' %}OK
        {% elif float_status < '1' %}Low
        {% else %}n/a
        {% endif %}
    reef_moonphases:
      friendly_name: 'Reef Moon'
      value_template: '{{ states.sensor.reef_weather_moon_phase_0d.state }}'
      entity_picture_template: >
        {% set mphase = states.sensor.reef_weather_moon_phase_0d.state | float %}
        {% if mphase == 0.0 -%}
           /local/images/moonphases/NNewMoon.jpg
        {% elif mphase == 0.25 -%}
           /local/images/moonphases/NFirstQuarter.jpg
        {% elif mphase == 0.5 -%}
           /local/images/moonphases/NFullMoon.jpg
        {% elif mphase == 0.75 -%}
           /local/images/moonphases/NLastQuarter.jpg
        {% elif mphase == 1 -%}
           /local/images/moonphases/NNewMoon.jpg
        {% elif mphase > 0.75 -%}
           /local/images/moonphases/NWaningCrescent.jpg
        {% elif mphase > 0.5 -%}
           /local/images/moonphases/NWaningGibbous.jpg
        {% elif mphase > 0.25 -%}
           /local/images/moonphases/NWaxingGibbous.jpg
        {% elif mphase > 0.0 -%}
           /local/images/moonphases/NWaxingCrescent.jpg
        {% else %}
           n/a
        {% endif %}

#alarm clock
- platform: template
  sensors:
    alarm_time_off_day:
      friendly_name: Alarm Time Off Day
      value_template: '{{ "%0.02d:%0.02d" | format(states("input_number.alarm_hour") | int, states("input_number.alarm_minutes") | int) }}'
    alarm_time_work_day:
      friendly_name: Alarm Time Work Day
      value_template: '{{ "%0.02d:%0.02d" | format(states("input_number.alarm_hour") | int, states("input_number.alarm_minutes") | int) }}'

#Greeting card
- platform: template
  sensors:
    time_of_day:
      value_template: >
        {% set current_hour = strptime(states('sensor.time'), "%H:%M").hour %}
        {% if current_hour < 12 %}
          Good Morning, Gabe
        {% elif 12 <= current_hour < 18 %}
          Good Afternoon, Gabe
        {% elif 18 <= current_hour < 23 %}
          Good Evening, Gabe
        {% else %}
          Good Night, Gabe
        {% endif %}
    greeter_card_info:
      value_template: >
        Next Event:{{ as_timestamp(states.calendar.gabethisisgabescom.attributes.start_time) | timestamp_custom('%Y/%m/%d at %H:%M') }}
        {{ states.calendar.gabethisisgabescom.attributes.message }}
    weather_alert_active_nyc:
      value_template: >-
        {% if states.sensor.new_york_2.state == "unknown" %}Off
        {% elif states.sensor.new_york_2.state == "0" %}Off
        {% else %}On
        {% endif %}
    weather_alert_active_hbg:
      value_template: >-
        {% if states.sensor.dauphin_2.state == "unknown" %}Off
        {% elif states.sensor.dauphin_2.state == "0" %}Off
        {% else %}On
        {% endif %}
    outside_alerts:
      value_template: >
        Current Location: {{ states('device_tracker.5re0217120001465') }}
        ({{ (as_timestamp (now()) -as_timestamp (states.device_tracker.huawei_mate.last_changed)) }})
    gps_occupancy_chance:
      value_template: >-
        {%- if is_state("device_tracker.5re0217120001465", "home") %}
            100
        {% elif is_state("device_tracker.5re0217120001465", "work") %}
            0
        {% elif is_state("device_tracker.5re0217120001465", "away") %}
            0
        {% else %}
            0
        {% endif -%}
    gps_occupancy_float:
      unit_of_measurement: '%'
      value_template: >-
        {{ (states.sensor.gps_occupancy_chance.state | float | round(0)) }}

- platform: weatheralerts
  zone: 72
  state: NY
  county: 61

- platform: weatheralerts
  zone: 57
  state: PA
  county: 43

#- platform: pilight
#  name: 'Some Inside Temperature Sensor'
#  variable: 'temperature'
#  payload:
#    protocol: tcm
#  unit_of_measurement: '°C'

#- platform: pilight
#  name: 'Some Smoke Detector'
#  variable: 'state'
#  payload:
#    protocol: secudo_smoke_sensor

#- platform: pilight
#  name: 'Some Screen Sensor'
#  variable: 'state'
#  payload:
#    protocol: arctech_screen_old

#- platform: pilight
#  name: 'Some Daycom Sensor'
#  variable: 'state'
#  payload:
#    protocol: daycom

#- platform: pilight
#  name: 'Some Gas Detector'
#  variable: 'state'
#  payload:
#    protocol: mumbi

#- platform: pilight
#  name: 'Maybe Closet Motion Detector'
#  variable: 'state'
#  payload:
#    protocol: rc101

#- platform: pilight
#  name: 'Maybe Hallway Motion Detector'
#  variable: 'state'
#  payload:
#    protocol: heitech

#- platform: pilight
#  name: 'Some Energy Sensor'
#  variable: 'state'
#  payload:
#    protocol: cleverwatts

#- platform: pilight
#  name: 'Some Weird Temp Sensor'
#  variable: 'temperature'
#  payload:
#    protocol: tfa
#  unit_of_measurement: '°F'

#- platform: pilight
#  name: 'Maybe Stove Temp Sensor'
#  variable: 'temperature'
#  payload:
#    protocol: auriol
#  unit_of_measurement: '°F'

# Fitbit
- platform: fitbit
  clock_format: 12H
  monitored_resources:
      - "activities/heart"
      - "activities/steps"
      - "activities/minutesFairlyActive"
      - "activities/minutesSedentary"
      - "activities/steps"
      - "activities/floors"
      - "activities/elevation"
      - "activities/floors"
      - "activities/distance"
      - "activities/tracker/floors"
      - "activities/tracker/elevation"
      - "activities/tracker/floors"
      - "activities/tracker/distance"
      - "activities/tracker/minutesVeryActive"
      - "activities/tracker/minutesSedentary"
      - "activities/tracker/minutesLightlyActive"
      - "activities/tracker/minutesFairlyActive"
      - "activities/tracker/steps"
      - "devices/battery"
      - "sleep/awakeningsCount"
      - "sleep/efficiency"
      - "sleep/minutesAfterWakeup"
      - "sleep/minutesAsleep"
      - "sleep/minutesAwake"
      - "sleep/minutesToFallAsleep"
      - "sleep/startTime"
      - "sleep/timeInBed"

- platform: mqtt
  state_topic: "et/reading"
  name: ET
  value_template: "{{ value }}"

#Desk buttons
- platform: mqtt
  state_topic: "button_a/reading"
  name: Desk Button A
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: "button_b/reading"
  name: Desk Button B
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: "button_c/reading"
  name: Desk Button C
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: "button_d/reading"
  name: Desk Button D
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: "button_e/reading"
  name: Desk Button E
  value_template: "{{ value }}"

- platform: mqtt
  state_topic: "numpad/reading/current"
  name: NumPad All
  value_template: "{{ value }}"

#Bathroom speaker
- platform: mqtt
  state_topic: "snapcast_bathroom_control/state"
  name: Bathroom Speaker
  value_template: "{{ value }}"

#Bed Sensor
- platform: mqtt
  state_topic: "bed_occupancy/reading/load"
  name: Bed Occupancy Load
  value_template: "{{ value }}"
  unit_of_measurement: "oz"

- platform: mqtt
  state_topic: "bed_occupancy/reading/tare"
  name: Bed Occupancy Tare
  value_template: "{{ value }}"
  unit_of_measurement: "oz"

- platform: template
  sensors:
    bed_occupancy_load_percent:
      value_template: '{{ states("sensor.bed_occupancy_load") | float / 12 | round(0) }}'
      unit_of_measurement: "%"
    bed_occupancy_count:
      icon_template: >-
        {% set bed_load = states.sensor.bed_occupancy_load.state | int %}
        {% if bed_load < 150 %}
          mdi:white-balance-sunny
        {% elif 151 <= bed_load < 600 %}
          mdi:bed-king
        {% elif 601 <= bed_load < 1300 %}
          mdi:account-supervisor
        {% elif 1301 <= bed_load < 2000 %}
          mdi:party-popper
        {% elif 2001 <= bed_load < 10000 %}
          mdi:party-popper
        {% else %}
          fas:question-circle
        {% endif %}
      value_template: >
        {% set bed_load = states.sensor.bed_occupancy_load.state | int %}
        {% if bed_load < 150 %}
          Empty
        {% elif 151 <= bed_load < 600 %}
          Single
        {% elif 601 <= bed_load < 1300 %}
          Double
        {% elif 1301 <= bed_load < 2000 %}
          Triple
        {% elif 2001 <= bed_load < 10000 %}
          Party Time!
        {% else %}
          N/A
        {% endif %}

    harmony_activity:
      value_template: >
        {% if is_state("remote.gabes_harmony_hub", 'on') %}
          {{ states.remote.gabes_harmony_hub.attributes.current_activity }}
        {% else %}
          PowerOff
        {% endif %}

    last_alexa:
      entity_id:
        - media_player.gabe_s_alexa
      value_template: >
        {{ states.media_player | selectattr('attributes.last_called','eq',True) | map(attribute='entity_id') | first }}

    tablet_screen:
      friendly_name: 'Tablet Screen'
      value_template: '{{ states.light.tablet_screen.state }}'
      entity_id: sensor.tablet_screen
    tablet_charging:
      friendly_name: 'Tablet Charging'
      value_template: '{{ states.light.tablet_screen.attributes.charging }}'
      entity_id: sensor.tablet_charging
    tablet_battery:
      friendly_name: 'Tablet Battery'
      value_template: '{{ states.light.tablet_screen.attributes.battery_level }}'
      entity_id: sensor.tablet_battery
    tablet_brightness:
      friendly_name: 'Tablet Brightness'
      value_template: '{{ states.light.tablet_screen.attributes.brightness }}'
      entity_id: sensor.tablet_brightness

    kiosk_screen:
      friendly_name: 'Kiosk Screen'
      value_template: '{{ states.light.browser_ec9832e0_7bf68e41.state }}'
      entity_id: sensor.kiosk_screen
    kiosk_charging:
      friendly_name: 'Kiosk Charging'
      value_template: '{{ states.sensor.browser_ec9832e0_7bf68e41.attributes.charging }}'
      entity_id: sensor.kiosk_charging
    kiosk_battery:
      friendly_name: 'Kiosk Battery'
      value_template: '{{ states.sensor.browser_ec9832e0_7bf68e41.attributes.battery_level }}'
      entity_id: sensor.kiosk_battery
    kiosk_brightness:
      friendly_name: 'Kiosk Brightness'
      value_template: '{{ states.sensor.browser_ec9832e0_7bf68e41.attributes.brightness }}'
      entity_id: sensor.kiosk_brightness

    roomba_batt:
      value_template: '{{ states.vacuum.roomba.attributes.battery_level }}'
      friendly_name: 'Roomba Battery'
      unit_of_measurement: '%'
      device_class: battery
    roomba_last_run:
      value_template: >-
        {% set today = now().day | int %}
        {% set roomba_date = ((as_timestamp(states.input_boolean.roomba_ran.last_changed) | timestamp_custom("%d")) | int) %}
        {% if today == roomba_date %}
          {% set day = "Today" %}
        {% elif (today - 1) == roomba_date %}
          {% set day = "Yesterday" %}
        {% elif today == 1 and roomba_date > 27 %}
          {% set day = "Yesterday" %}
        {% else %}
          {% set day = as_timestamp(states.input_boolean.roomba_ran.last_changed) | timestamp_custom("%A")%}
        {% endif %}
        {% set time = as_timestamp(states.input_boolean.roomba_ran.last_changed) | timestamp_custom("%l:%M %p")%}
        {{[day,time]|join(" at ")}}
      friendly_name: 'Roomba Last Run'

    fitbit_steps:
      friendly_name: 'Steps'
      value_template: >
        {{ states.sensor.steps.state | replace(",","") }}
      unit_of_measurement: 'steps'

#Soundbar Connection
    soundbar_connected:
      friendly_name: 'Soundbar Connected'
      value_template: >
        {%- if state_attr('media_player.gabe_s_alexa', 'source') == '[AV] Samsung Soundbar K360 K-Series' %}
         on
        {%- else -%}
         off
        {%- endif %}
      entity_id: sensor.soundbar_connected

    mini_bt_connected:
      friendly_name: 'Mini Cooper BT'
      value_template: >
        {% if 'A0:14:3D:3F:AA:66' in states('sensor.mini_occupantslist') %}
         on
        {%- else -%}
         off
        {%- endif %}
      entity_id: sensor.mini_cooper_bt

    mini_obd_connected:
      friendly_name: 'Mini Cooper OBD'
      value_template: >
        {% if '34:81:F4:D1:2C:CB' in states('sensor.mini_occupantslist') %}
         on
        {%- else -%}
         off
        {%- endif %}
      entity_id: sensor.mini_cooper_obd

    mini_aj_connected:
      friendly_name: 'Mini Cooper Passenger AJ'
      value_template: >
        {% if '60:5b:b4:86:05:a7' in states('sensor.mini_occupantslist') %}
         on
        {%- else -%}
         off
        {%- endif %}
      entity_id: sensor.mini_cooper_aj

    outside_temp:
      friendly_name: "Outside Temperature"
      unit_of_measurement: '°F'
      value_template: "{{ states.sensor.dark_sky_temperature.state }}"
      icon_template: >
        {% if is_state("sensor.dark_sky_icon", "clear-day") -%}
           mdi:weather-sunny
        {% elif is_state("sensor.dark_sky_icon", "clear-night") -%}
           mdi:weather-night
        {% elif is_state("sensor.dark_sky_icon", "rain") -%}
           mdi:weather-rainy
        {% elif is_state("sensor.dark_sky_icon", "snow") -%}
           mdi:weather-snowy
        {% elif is_state("sensor.dark_sky_icon", "sleet") -%}
           mdi:weather-snowy-rainy
        {% elif is_state("sensor.dark_sky_icon", "wind") -%}
           mdi:weather-windy-variant
        {% elif is_state("sensor.dark_sky_icon", "fog") -%}
           mdi:weather-fog
        {% elif is_state("sensor.dark_sky_icon", "cloudy") -%}
           mdi:weather-cloudy
        {% elif is_state("sensor.dark_sky_icon", "partly-cloudy-day") -%}
           mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon", "partly-cloudy-night") -%}
           mdi:weather-partlycloudy
        {% elif is_state("sensor.dark_sky_icon", "hail") -%}
           mdi:weather-hail
        {% elif is_state("sensor.dark_sky_icon", "thunderstorm") -%}
           mdi:weather-lightning
        {% else %}
           mdi:help-circle
        {% endif %}
      entity_picture_template: >
        {% if is_state("sensor.dark_sky_icon", "clear-day") -%}
           /local/images/icons/weather_icons/animated/day.svg
        {% elif is_state("sensor.dark_sky_icon", "clear-night") -%}
           /local/images/icons/weather_icons/animated/night.svg
        {% elif is_state("sensor.dark_sky_icon", "rain") -%}
           /local/images/icons/weather_icons/animated/rainy-1.svg
        {% elif is_state("sensor.dark_sky_icon", "snow") -%}
           /local/images/icons/weather_icons/animated/snowy-6.svg
        {% elif is_state("sensor.dark_sky_icon", "sleet") -%}
           /local/images/icons/weather_icons/animated/rainy-7.svg
        {% elif is_state("sensor.dark_sky_icon", "wind") -%}
           /local/images/icons/weather_icons/animated/cloudy.svg
        {% elif is_state("sensor.dark_sky_icon", "fog") -%}
           /local/images/icons/weather_icons/animated/cloudy.svg
        {% elif is_state("sensor.dark_sky_icon", "cloudy") -%}
           /local/images/icons/weather_icons/animated/cloudy.svg
        {% elif is_state("sensor.dark_sky_icon", "partly-cloudy-day") -%}
           /local/images/icons/weather_icons/animated/cloudy-day-3.svg
        {% elif is_state("sensor.dark_sky_icon", "partly-cloudy-night") -%}
           /local/images/icons/weather_icons/animated/cloudy-night-3.svg
        {% elif is_state("sensor.dark_sky_icon", "hail") -%}
           /local/images/icons/weather_icons/animated/rainy-7.svg
        {% elif is_state("sensor.dark_sky_icon", "thunderstorm") -%}
           /local/images/icons/weather_icons/animated/thunder.svg
        {% else %}
           /local/images/icons/weather_icons/animated/weather.svg
        {% endif %}

- platform: plex_recently_added
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
#  ssl: true
#  ssl_cert: true

- platform: rest
  name: Kiosk Info
  json_attributes:
    - isScreenOn
    - batteryLevel
    - kioskMode
    - screenBrightness
    - motionDetectorState
    - maintenanceMode
    - appFreeMemory
    - appUsedMemory
    - totalFreeMemory
    - totalUsedMemory
    - hostname4
    - ip4
    - mac
    - locationLatitude
    - locationLongitude
    - locationAltitude
    - startUrl
    - currentPage
  resource: !secret kiosk_resource
  value_template: '{{ value_json.isScreenOn }}'
  scan_interval: 10

- platform: rest
  name: Kiosk Settings
  json_attributes:
    - timeToScreenOffV2
    - screenBrightness
    - motionSensitivity
    - motionDection
    - motionDetectionAcoustic
    - motionSensitivityAcoustic
    - screenOffInDarkness
    - darknessLevel
  resource: !secret kiosk_settings
  value_template: '{{ value_json.motionSensitivity }}'
  scan_interval: 10

#mqtt kiosk Sensors
- platform: mqtt
  state_topic: "kiosk_sensors/+/ec9832e0-7bf68e41"
  name: Kiosk Sensors
  value_template: '{{value_json.event}}'

# Presence Monitor
- platform: mqtt
  state_topic: 'monitor/home-assistant/ionic'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Ionic BT Hass'

- platform: mqtt
  state_topic: 'monitor/home-assistant/gabes_macbook'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Gabes Macbook BT Hass'

- platform: mqtt
  state_topic: 'monitor/home-assistant/gabes_mate_hotspot'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Gabes Mate Hotspot BT Hass'

- platform: mqtt
  state_topic: 'monitor/octocam/ionic'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Ionic BT OctoCam'

- platform: mqtt
  state_topic: 'monitor/octocam/gabes_macbook'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Gabes Macbook BT OctoCam'

- platform: mqtt
  state_topic: 'monitor/octocam/gabes_mate_hotspot'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Gabes Mate Hotspot BT OctoCam'

- platform: mqtt
  state_topic: 'monitor/reefcontrolpi/ionic'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Ionic BT ReefPi'

- platform: mqtt
  state_topic: 'monitor/reefcontrolpi/gabes_macbook'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Gabes Macbook BT ReefPi'

- platform: mqtt
  state_topic: 'monitor/reefcontrolpi/gabes_mate_hotspot'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Gabes Mate Hotspot BT ReefPi'

- platform: min_max
  name: "Home Occupancy Confidence"
  type: max
  round_digits: 0
  entity_ids:
    - sensor.gps_occupancy_float
    - sensor.gabes_macbook_bt_reefpi
    - sensor.ionic_bt_reefpi
    - sensor.gabes_mate_hotspot_bt_reefpi
    - sensor.gabes_macbook_bt_octocam
    - sensor.ionic_bt_octocam
    - sensor.gabes_mate_hotspot_bt_octocam
    - sensor.gabes_macbook_bt_hass
    - sensor.ionic_bt_hass
    - sensor.gabes_mate_hotspot_bt_hass

#twitch
- platform: twitch
  client_id: !secret twitch_id
  token: !secret twitch_token
  channels:
    - magickal_guy
    - sfgabe

#Car tracker - https://childof69.co.uk/ha-car-telemetry/#comment-59
- platform: mqtt
  name: "Mini Torque"
  state_topic: "devices/Mini/torque"
  value_template: "{{ state_attr('sensor.mini_torque', 'GPS Time') }}"
  json_attributes_topic: "devices/Mini/torque"

- platform: mqtt
  name: "Mini Occupants"
  state_topic: "devices/Mini"
  value_template: "{{ state_attr('sensor.mini_occupants', 'time') }}"
  json_attributes_topic: "devices/Mini"

- platform: template
  sensors:
    mini_occupantslist:
      value_template: "{{ state_attr('sensor.mini_occupants', 'addresses') }}"
      friendly_name: Mini Cooper Occupants

    mini_gpsspeed:
      value_template: "{{ state_attr('sensor.mini_torque', 'GPS Speed (Meters/second)') }}"
      friendly_name: Mini Cooper GPS Speed (Meters/second)
      unit_of_measurement: 'm'

    mini_gpsaltitude:
      value_template: "{{ state_attr('sensor.mini_torque', 'GPS Altitude(ft)') }}"
      friendly_name: Mini Cooper GPS Altitude
      unit_of_measurement: 'ft'

    mini_accelerationsensor:
      value_template: "{{ state_attr('sensor.mini_torque', 'Acceleration Sensor(Total)(g)') }}"
      friendly_name: Mini Cooper Acceleration Sensor(Total)
      unit_of_measurement: 'g'

    mini_acceleratorpedalposition:
      value_template: "{{ state_attr('sensor.mini_torque', 'Accelerator PedalPosition D(%)') }}"
      friendly_name: Mini Cooper Accelerator Pedal Position
      unit_of_measurement: '%'

    mini_airfuelratio:
      value_template: "{{ state_attr('sensor.mini_torque', 'Air Fuel Ratio(Commanded)(:1)') }}"
      friendly_name: Mini Cooper Air Fuel Ratio

    mini_ambientairtemp:
      value_template: "{{ state_attr('sensor.mini_torque', 'Ambient air temp(°F)') }}"
      friendly_name: Mini Cooper Ambient air temp
      unit_of_measurement: '°F'

    mini_androiddevicebattery:
      value_template: "{{ state_attr('sensor.mini_torque', 'Android device Battery Level(%)') }}"
      friendly_name: Mini Cooper Android device Battery Level
      unit_of_measurement: '%'

    mini_catalysttemperature:
      value_template: "{{ state_attr('sensor.mini_torque', 'Catalyst Temperature (Bank 1 Sensor 1)(°F)') }}"
      friendly_name: Mini Cooper Catalyst Temperature
      unit_of_measurement: '°F'

    mini_gpstime:
      value_template: "{{ state_attr('sensor.mini_torque', 'GPS Time') }}"
      friendly_name: Mini Cooper GPS Time

    mini_costpermile:
      value_template: "{{ state_attr('sensor.mini_torque', 'Cost per mile/km (Instant)($/m)') }}"
      friendly_name: Mini Cooper Cost per mile Instant
      unit_of_measurement: '$'

    mini_costpermiletrip:
      value_template: "{{ state_attr('sensor.mini_torque', 'Cost per mile/km (Trip)($/m)') }}"
      friendly_name: Mini Cooper Cost per mile Trip
      unit_of_measurement: '$'

    mini_distancetoempty:
      value_template: "{{ state_attr('sensor.mini_torque', 'Distance to empty (Estimated)(miles)') }}"
      friendly_name: Mini Cooper Distance to empty (Estimated)
      unit_of_measurement: 'm'

    mini_distancetravelledsincecleared:
      value_template: "{{ state_attr('sensor.mini_torque', 'Distance travelled since codes cleared(miles)') }}"
      friendly_name: Mini Cooper Distance travelled since codes cleared
      unit_of_measurement: 'm'

    mini_engineload:
      value_template: "{{ state_attr('sensor.mini_torque', 'Engine Load(%)') }}"
      friendly_name: Mini Cooper Engine Load
      unit_of_measurement: '%'

    mini_enginerpm:
      value_template: "{{ state_attr('sensor.mini_torque', 'Engine RPM(rpm)') }}"
      friendly_name: Mini Cooper Engine RPM
      unit_of_measurement: 'rpm'

    mini_fuelcosttrip:
      value_template: "{{ state_attr('sensor.mini_torque', 'Fuel cost (trip)(cost)') }}"
      friendly_name: Mini Cooper Fuel cost (trip)
      unit_of_measurement: '$'

    mini_fuelflowratehour:
      value_template: "{{ state_attr('sensor.mini_torque', 'Fuel flow rate/hour(gal/hr)') }}"
      friendly_name: Mini Cooper Fuel flow rate/hour
      unit_of_measurement: 'gal'

    mini_fuellevelfromengine:
      value_template: "{{ state_attr('sensor.mini_torque', 'Fuel Level (From Engine ECU)(%)') }}"
      friendly_name: Mini Cooper Fuel Level (From Engine ECU)
      unit_of_measurement: '%'

    mini_fuelrailpressure:
      value_template: "{{ state_attr('sensor.mini_torque', 'Fuel Rail Pressure(psi)') }}"
      friendly_name: Mini Cooper Fuel Rail Pressure
      unit_of_measurement: 'psi'

    mini_fuelremaining:
      value_template: "{{ state_attr('sensor.mini_torque', 'Fuel Remaining (Calculated from vehicle profile)(%)') }}"
      friendly_name: Mini Cooper Fuel Remaining
      unit_of_measurement: '%'

    mini_fuelusedtrip:
      value_template: "{{ state_attr('sensor.mini_torque', 'Fuel used (trip)(gal)') }}"
      friendly_name: Mini Cooper Fuel used (trip)
      unit_of_measurement: 'gal'

    mini_intakeairtemperature:
      value_template: "{{ state_attr('sensor.mini_torque', 'Intake Air Temperature(°F)') }}"
      friendly_name: Mini Cooper Intake Air Temperature
      unit_of_measurement: '°F'

    mini_intakemanifoldpressurepsi:
      value_template: "{{ state_attr('sensor.mini_torque', 'Intake Manifold Pressure(psi)') }}"
      friendly_name: Mini Cooper Intake Manifold Pressure
      unit_of_measurement: 'psi'

    mini_milespergalloninstant:
      value_template: "{{ state_attr('sensor.mini_torque', 'Miles Per Gallon(Instant)(mpg)') }}"
      friendly_name: Mini Cooper Miles Per Gallon(Instant)
      unit_of_measurement: 'mpg'

    mini_milespergallonlongtermaverage:
      value_template: "{{ state_attr('sensor.mini_torque', 'Miles Per Gallon(Long Term Average)(mpg)') }}"
      friendly_name: Mini Cooper Miles Per Gallon(Long Term Average)
      unit_of_measurement: 'mpg'

    mini_percentageofcitydriving:
      value_template: "{{ state_attr('sensor.mini_torque', 'Percentage of City driving(%)') }}"
      friendly_name: Mini Cooper Percentage of City driving
      unit_of_measurement: '%'

    mini_percentageofhighwaydriving:
      value_template: "{{ state_attr('sensor.mini_torque', 'Percentage of Highway driving(%)') }}"
      friendly_name: Mini Cooper Percentage of Highway driving
      unit_of_measurement: '%'

    mini_percentageofidledriving:
      value_template: "{{ state_attr('sensor.mini_torque', 'Percentage of Idle driving(%)') }}"
      friendly_name: Mini Cooper Percentage of Idle driving
      unit_of_measurement: '%'

    mini_relativethrottleposition:
      value_template: "{{ state_attr('sensor.mini_torque', 'Relative Throttle Position(%)') }}"
      friendly_name: Mini Cooper Relative Throttle Position
      unit_of_measurement: '%'

    mini_runtimesinceenginestart:
      value_template: "{{ state_attr('sensor.mini_torque', 'Run time since engine start(s)') }}"
      friendly_name: Mini Cooper Run time since start
      unit_of_measurement: 's'

    mini_runtimesinceenginestart_format:
      friendly_name: 'Mini Cooper Run time since start Format'
      value_template: >-
        {% set etime = states.sensor.mini_runtimesinceenginestart.state | int %}
        {% set seconds = etime % 60 %}
        {% set minutes = ((etime % 3600) / 60) | int %}
        {% set hours = ((etime % 86400) / 3600) | int %}
        {% set days = (etime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 day
          {%- else -%}
            {{ days }} days
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minute
          {%- else -%}
            {{ minutes }} minutes
          {%- endif -%}
        {%- endif -%}

    mini_speedgps:
      value_template: "{{ state_attr('sensor.mini_torque', 'Speed (GPS)(mph)') }}"
      friendly_name: Mini Cooper Speed (GPS)
      unit_of_measurement: 'mph'

    mini_speedobd:
      value_template: "{{ state_attr('sensor.mini_torque', 'Speed (OBD)(mph)') }}"
      friendly_name: Mini Cooper Speed (OBD)
      unit_of_measurement: 'mph'

    mini_throttlepositionmanifold:
      value_template: "{{ state_attr('sensor.mini_torque', 'Throttle Position(Manifold)(%)') }}"
      friendly_name: Mini Cooper Throttle Position(Manifold)
      unit_of_measurement: '%'

    mini_transmissiontemperature:
      value_template: "{{ state_attr('sensor.mini_torque', 'Transmission Temperature(Method 1)(°F)') }}"
      friendly_name: Mini Cooper Transmission Temperature
      unit_of_measurement: '°F'

    mini_tripaveragempg:
      value_template: "{{ state_attr('sensor.mini_torque', 'Trip average MPG(mpg)') }}"
      friendly_name: Mini Cooper Trip average MPG
      unit_of_measurement: 'mpg'

    mini_triptimewhilstmoving:
      value_template: "{{ state_attr('sensor.mini_torque', 'Trip time(whilst moving)(s)') }}"
      friendly_name: Mini Cooper Trip time(whilst moving)
      unit_of_measurement: 's'

    mini_triptimewhilstmoving_format:
      friendly_name: 'Mini Cooper Trip time(whilst moving) Format'
      value_template: >-
        {% set etime = states.sensor.mini_triptimewhilstmoving.state | int %}
        {% set seconds = etime % 60 %}
        {% set minutes = ((etime % 3600) / 60) | int %}
        {% set hours = ((etime % 86400) / 3600) | int %}
        {% set days = (etime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 day
          {%- else -%}
            {{ days }} days
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minute
          {%- else -%}
            {{ minutes }} minutes
          {%- endif -%}
        {%- endif -%}

    mini_triptimewhilststationary:
      value_template: "{{ state_attr('sensor.mini_torque', 'Trip time(whilst stationary)(s)') }}"
      friendly_name: Mini Cooper Trip time(whilst stationary)
      unit_of_measurement: 's'

    mini_triptimewhilststationary_format:
      friendly_name: 'Mini Cooper Trip time(whilst stationary) Format'
      value_template: >-
        {% set etime = states.sensor.mini_triptimewhilststationary.state | int %}
        {% set seconds = etime % 60 %}
        {% set minutes = ((etime % 3600) / 60) | int %}
        {% set hours = ((etime % 86400) / 3600) | int %}
        {% set days = (etime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 day
          {%- else -%}
            {{ days }} days
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minute
          {%- else -%}
            {{ minutes }} minutes
          {%- endif -%}
        {%- endif -%}

    mini_turboboostvacuumgaugepsi:
      value_template: "{{ state_attr('sensor.mini_torque', 'Turbo Boost & Vacuum Gauge(psi)') }}"
      friendly_name: Mini Cooper Turbo Boost & Vacuum Gauge
      unit_of_measurement: 'psi'

    mini_voltagecontrolmodule:
      value_template: "{{ state_attr('sensor.mini_torque', 'Voltage (Control Module)(V)') }}"
      friendly_name: Mini Cooper Voltage (Control Module)
      unit_of_measurement: 'V'

    mini_volumetricefficiencycalculated:
      value_template: "{{ state_attr('sensor.mini_torque', 'Volumetric Efficiency (Calculated)(%)') }}"
      friendly_name: Mini Cooper Volumetric Efficiency
      unit_of_measurement: '%'

    mini_voltageobdadapter:
      value_template: "{{ state_attr('sensor.mini_torque', 'Voltage (OBD Adapter)(V)') }}"
      friendly_name: Mini Cooper Voltage (OBD Adapter)
      unit_of_measurement: 'V'

#baby stuff
- platform: template
  sensors:
    pregnancy_days:
      friendly_name: "Days until due"
      unit_of_measurement: 'days'
      value_template: "{{ (strptime(states.input_datetime.due_date.state, '%Y-%m-%d') - now().replace(tzinfo=None)).days }}"
    pregnancy_weeks:
      friendly_name: "Pregnancy Week"
      unit_of_measurement: 'weeks'
      value_template: "{{ ((40 - ((states.sensor.pregnancy_days.state | int) / 7)) | round(0, 'floor')) }}"
    pregnancy_percent:
      friendly_name: "Pregnancy Percent"
      unit_of_measurement: '%'
      value_template: "{{ ((280 - (states.sensor.pregnancy_days.state | int)) / 2.8) | round(0, 'floor')}}"
    pregnancy_month:
      friendly_name: "Pregnancy Month"
      unit_of_measurement: 'months'
      value_template: "{{ ((9 - ((states.sensor.pregnancy_weeks.state | int) / 4)) | round(0, 'floor')) }}"
    pregnancy:
      friendly_name: "Pregnancy"
      unit_of_measurement: 'Trimester'
      value_template: |
        {% set x = ((280 - (states.sensor.pregnancy_days.state | int)) / 93.3) | round(0, 'ceil') %}
        {{ 'First' if x == 1 else 'Second' if x == 2 else 'Third' }}
      attribute_templates:
        days: "{{ states.sensor.pregnancy_days.state }}"
        weeks: "{{ states.sensor.pregnancy_weeks.state }}"
        trimester: "{{ ((280 - (states.sensor.pregnancy_days.state | int)) / 93.3) | round(0, 'ceil') }}"
        months: "{{ ((280 - (states.sensor.pregnancy_days.state | int)) / 30.5) | round(1, 'half') }}"
        percent: "{{ ((280 - (states.sensor.pregnancy_days.state | int)) / 2.8) | round(0, 'floor')}}"
        what_to_expect_url: "https://www.whattoexpect.com/pregnancy/week-by-week/week-{{ states.sensor.pregnancy_weeks.state }}.aspx"
        fetus_size_image: "https://images.agoramedia.com/wte3.0/gcms/wbw_squares_baby_wk_{{ states.sensor.pregnancy_weeks.state }}.jpg"
        fetus_size_fruit_image: "https://images.agoramedia.com/wte3.0/gcms/wbw-{{ states.sensor.pregnancy_weeks.state }}-fruit.png"
        fetus_size_fruit: |
          {% set sizes = { 4: 'Strawberry Seed', 5: 'Orange Seed', 6: 'Sweet Pea', 7: 'Blueberry', 8: 'Raspberry',
                           9: 'Green Olive', 10: 'Prune', 11: 'Large Strawberry', 12: 'Lime', 13: 'Lemon',
                          14: 'Navel Orange', 15: 'Pear', 16: 'Avocado', 17: 'Large Onion', 18: 'Cucumber',
                          19: 'Mango', 20: 'Sweet Potato', 21: 'Large Banana', 22: 'Red Bell Pepper',
                          23: 'Grapefruit', 24: 'Pomegranate', 25: 'Eggplant', 26: 'Acorn Squash', 27: 'Cabbage',
                          28: 'Head of Lettuce', 29: 'Head of Cauliflower', 30: 'Bunch of Broccoli', 31: 'Coconut',
                          32: 'Cantaloupe', 33: 'Butternut Squash', 34: 'Pineapple', 35: 'Spaghetti Squash',
                          36: 'Bunch of Kale', 37: 'Canary Melon', 38: 'Mini Watermelon', 39: 'Honeydew Melon',
                          40: 'Small Pumpkin', 41: 'Pumpkin', 42: 'Watermelon' } %}
          {{ sizes[([4, states('sensor.pregnancy_weeks')|int, 42]|sort)[1]] }}
        verywellfamily_link: |
          {% set pages =  { 1: '4158813', 2: '4158819', 3: '4158839', 4: '4158847', 5: '4158868',
                            6: '4158911', 7: '4158916', 8: '4158920', 9: '4158922', 10: '4158926',
                           11: '4158930', 12: '4158934', 13: '4158941', 14: '4158944', 15: '4158988',
                           16: '4158998', 17: '4159005', 14: '4158944', 15: '4158988', 16: '4158998',
                           17: '4159005', 18: '4159009', 19: '4159012', 20: '4159017', 21: '4159022',
                           22: '4159032', 23: '4159036', 24: '4159040', 25: '4159047', 26: '4159097',
                           27: '4159102', 28: '4159110', 29: '4159140', 30: '4159146', 31: '4159202',
                           32: '4159205', 33: '4159211', 34: '4159227', 35: '4159237', 36: '4159243',
                           37: '4159250', 38: '4159251', 39: '4159263', 40: '4159264' } %}
          {% set x = ([1, states('sensor.pregnancy_weeks')|int, 40]|sort)[1] %}
          https://www.verywellfamily.com/{{x|string}}-weeks-pregnant-{{pages[x]}}
